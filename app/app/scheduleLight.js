'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));
var ReactDOM = _interopDefault(require('react-dom'));
var electron = require('electron');
var Graph = _interopDefault(require('node-jsgraph/dist/jsgraph-es6'));

class ScheduleLight extends React.Component{constructor(a){super(a), this.state={controller:!1,fixed_intensity:{},fixed_intensity_val:{},schedule_basis:{},schedule_values:{},error:!1}, this.apply=this.apply.bind(this), this.close=this.close.bind(this), this.save=this.save.bind(this), this.handleInputChange=this.handleInputChange.bind(this);}handleFocus(a){a.target.select();}async save(){await this.apply();}async apply(){let a={instrumentId:this.props.instrumentId,groupName:this.props.groupName,control:{setPoint:!!this.state.fixed_intensity&&parseFloat(this.state.fixed_intensity_val),scheduling:{enable:!this.state.fixed_intensity,basis:this.state.schedule_basis,intensities:this.state.schedule_values.split('\n').map(a=>parseFloat(a))}}},b=JSON.stringify(a);var c=new Headers({"Content-Type":'application/json',"Content-Length":b.length.toString()});return this.setState({message:'Saving light controllers and setting new light intensity. This may take a while...',error:!1,success:!1}), fetch(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/lightSetControl`,{method:'POST',headers:c,body:b}).then(a=>{if(!a.ok)throw Error(a.statusText);this.setState({error:!1,success:'Success !'}), electron.ipcRenderer.send('light.updated');}).catch(()=>(this.setState({error:'Error while saving the controller data',success:!1}), Promise.reject())).then(a=>(this.setState({message:!1}), a))}close(){this.props.onClose();}async componentDidMount(){this.graph=new Graph(this.graphDom,{paddingBottom:40}), this.graph.resize(400,300), this.graph.newSerie('schedule').autoAxis(), this.graph.getBottomAxis().setLabel('Time').setUnitWrapper('(',')'), this.graph.getLeftAxis().setLabel('Sun intensity').forceMin(-.1).forceMax(2.1), this.setState({message:'Fetching light controllers...'}), await fetch('http://'+this.props.config.trackerHost+':'+this.props.config.trackerPort+'/lightGetControl?instrumentId='+this.props.instrumentId+'&groupName='+this.props.groupName,{method:'GET'}).then(a=>a.json()).then(a=>this.setState(()=>({error:!1,controller:a,fixed_intensity:!a.scheduling.enable,fixed_intensity_val:parseFloat(a.setPoint),schedule_basis:a.scheduling.basis,schedule_values:a.scheduling.intensities.join('\n')}))).catch(a=>{console.error(a);let b='Error in getting the controller for group name "'+this.props.groupName+'"';this.setState({success:!1,error:b});}).then(()=>{this.setState({message:!1,success:!1});});}componentDidUpdate(){var a=Graph.newWaveform().setData([]);if(this.state.fixed_intensity)a.setData([this.state.fixed_intensity_val,this.state.fixed_intensity_val],[0,10]);else if(this.state.schedule_values){let b,c=this.state.schedule_values.split('\n').map(a=>parseFloat(a)),d=c.length,e=[],f=[];switch(this.state.schedule_basis){case 3600:b=60/d, this.graph.getBottomAxis().setUnit('minutes');break;case 86400:b=24/d, this.graph.getBottomAxis().setUnit('hours');}c.forEach((a,d)=>{0<d&&(e.push(c[d-1]), f.push(d*b)), e.push(a), f.push(d*b);}), e.push(c[c.length-1]), f.push(c.length*b), e.push(c[0]), f.push(c.length*b), a.setData(e,f);}this.graph&&(this.graph.getSerie('schedule').setWaveform(a), this.graph.autoscaleAxes(), this.graph.draw());}handleInputChange(a){const b=a.target,c='checkbox'===b.type?b.checked:b.value,d=b.name;this.setState({[d]:c});}render(){var a=0<this.state.fixed_intensity_val&&.25>this.state.fixed_intensity_val;return React.createElement('div',{className:'container-fluid',id:'calib_light_list'},!!this.state.success&&React.createElement('div',{className:'alert alert-success'},this.state.success),!!this.state.error&&React.createElement('div',{className:'alert alert-danger'},this.state.error),!!this.state.message&&React.createElement('div',{className:'alert alert-info'},React.createElement('span',{className:'glyphicon glyphicon-info-sign',"aria-hidden":'true'}),' ',this.state.message),React.createElement('div',{className:'col-sm-4'},!!this.state.controller&&React.createElement('div',null,React.createElement('div',{className:'form-group'},React.createElement('label',null,'Light controller :'),' ',this.props.groupName),React.createElement('div',{className:'form-group'},React.createElement('div',{className:'checkbox'},React.createElement('label',null,React.createElement('input',{type:'checkbox',name:'fixed_intensity',checked:this.state.fixed_intensity,onChange:this.handleInputChange}),' Fixed intensity'))),this.state.fixed_intensity?React.createElement('div',{className:'form-group '+(a?'has-error':'')},React.createElement('label',null,'Intensity'),React.createElement('input',{className:'form-control',type:'number',min:'0',max:'1.5',step:'0.01',name:'fixed_intensity_val',value:this.state.fixed_intensity_val,onChange:this.handleInputChange}),a?React.createElement('span',{className:'help-block alert-danger'},'The power supply cannot sustain light intensities below 0.25 sun. It will automatically turn off'):''):React.createElement('div',null,React.createElement('div',{className:'form-group'},React.createElement('label',null,'Time basis :'),React.createElement('select',{className:'form-control',name:'schedule_basis',value:this.state.schedule_basis,onChange:this.handleInputChange},React.createElement('option',{value:'null',disabled:'disabled'},'Choose a time basis'),React.createElement('option',{value:'3600'},'1 hour'),React.createElement('option',{value:'86400'},'1 day'))),React.createElement('div',{className:'form-group'},React.createElement('label',null,'Light intensities :'),React.createElement('textarea',{className:'form-control',name:'schedule_values',value:this.state.schedule_values,onChange:this.handleInputChange,onFocus:this.handleFocus}),React.createElement('span',{className:'help-block'},'Enter values (in suns) separated by new lines. Check the graph on the right')))),React.createElement('div',{className:'btn-group'},React.createElement('button',{className:'btn-primary btn',onClick:this.apply},'Apply'),React.createElement('button',{className:'btn-primary btn',onClick:this.save},'Validate'),React.createElement('button',{className:'btn-default btn',onClick:this.close},'Close'))),React.createElement('div',{className:'col-sm-5'},React.createElement('label',null,'Light profile vs time'),React.createElement('div',{ref:a=>{this.graphDom=a;}})))}}

const {ipcRenderer: ipcRenderer$1}=require('electron');ipcRenderer$1.on('loadForm',(a,b)=>{render(b);});function onClose(){ipcRenderer$1.send('closeForm');}function render(a){ReactDOM.render(React.createElement(ScheduleLight,{instrumentId:a.instrumentId,groupName:a.groupName,config:a.config,onClose:onClose}),document.getElementById('root'));}

//# sourceMappingURL=scheduleLight.js.map
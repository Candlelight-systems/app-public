'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));
var ReactDOM = _interopDefault(require('react-dom'));
var extend = _interopDefault(require('extend'));
var Graph = _interopDefault(require('node-jsgraph/dist/jsgraph-es6'));
var $$1 = _interopDefault(require('jquery'));
var fs = _interopDefault(require('fs'));
var electron = require('electron');
var urllib = _interopDefault(require('url-lib'));
var debounce = _interopDefault(require('lodash.debounce'));

class GraphComponent extends React.PureComponent{constructor(a){super(a);}componentWillReceiveProps(a){(a.width!==this.props.width||a.height!==this.props.height)&&this.resize(a);}shouldComponentUpdate(a){return!!a.shown}resize(a){this.graph.resize(a.width||300,a.height||130);}render(){return React.createElement("div",{className:"cellGraph"},React.createElement("div",{ref:a=>this.graphDOM=a}))}}

var modes={sparkline:{graphConstructor:{paddingTop:4,paddingLeft:0,paddingRight:0,paddingBottom:0}},default:{graphConstructor:{paddingTop:4,paddingLeft:9,paddingRight:4,paddingBottom:2}}};class statusGraph extends GraphComponent{constructor(a){super(a), this.shapes_IV=[];}componentDidMount(){this.graphDOM&&(this.graph=new Graph(this.graphDOM,extend(!0,{},modes[this.props.mode].graphConstructor,{close:{left:!1,right:!1,top:!1,bottom:!1}})), this.resize(this.props), this.serie=this.graph.newSerie(), this.serie.setLineColor('#55310d'), this.serie.autoAxis(), this.serie.setLineWidth(2), this.serie.setLabel(this.props.serieLabelLegend), 'sparkline'==this.props.mode?(this.graph.getYAxis().turnGridsOff(), this.graph.getXAxis().hide(), this.graph.getYAxis().hide()):(this.graph.getXAxis().setUnitInTicks(!0).setTickLabelOffset(-60).setTickPosition(Graph.TICKS_INSIDE).secondaryGridOff().setPrimaryTicksColor('#6c5e47').setSecondaryTicksColor('#6c5e47').setTicksLabelColor('#55310d').setNbTicksSecondary(0).setUnit('h').setPrimaryGridColor('#d3c3a9'), this.graph.getYAxis().hide(), this.graph.getYAxis().setLabel(this.props.axisLabel).setUnit(this.props.axisUnit).setUnitWrapper('(',')'), this.graph.getXAxis(), this.graph.getXAxis(), this.graph.getRightAxis(0).forceMin(0)), this.graph.getXAxis().setAxisDataSpacing(.001,.001), this.graph.getYAxis().setAxisDataSpacing(.001,.001), this.graph.getYAxis().forceMin(0), this.serieZone=this.graph.newSerie('zone',{},'zone'), this.serieZone.setLineColor('#c0c0c0'), this.serieZone.setFillColor('#f0f0f0'), this.serieZone.setFillOpacity(.2), this.serieZone.autoAxis(), this.serieZone.setLineWidth(0), this.serieZone.excludedFromLegend=!0, 'sparkline'!==this.props.mode&&(this.flag1=this.graph.newShape('html'), this.flag1.addTransform('translate',this.graph.newPosition({dx:'-60px',dy:'0px'})), this.flag1.setRenderer(a=>{ReactDOM.render(React.createElement('div',{className:'graph_tooltip medium'},React.createElement('div',{className:'top'},React.createElement('span',null,this.props.flag1,' ',this.props.unit))),a);}), this.flag1.setSerie(this.serie), this.flag1.setWidth(100), this.flag1.setHeight(100), this.flag1.draw(), this.flag2=this.graph.newShape('html'), this.flag2.addTransform('translate',this.graph.newPosition({dx:'-80px',dy:'-5px'})), this.flag2.setRenderer(a=>{ReactDOM.render(React.createElement('div',{className:'graph_tooltip medium'},React.createElement('div',{className:'top'},React.createElement('span',null,this.props.flag2,' ',this.props.unit))),a);}), this.flag2.setSerie(this.serie), this.flag2.setWidth(100), this.flag2.setHeight(100), this.flag2.draw()));}componentDidUpdate(){this.serie&&(this.graph&&this.props.data?(this.serie.setWaveform(this.props.data), this.serieZone.setWaveform(this.props.data.duplicate(!0).prepend(0,0).append(a=>a.getXRaw(a.getLength()-1),0)), this.graph.autoscaleAxes(), this.flag1&&this.flag2&&(this.flag1.show(), this.flag2.show(), this.flag1.setPosition({x:this.props.flag1_pos}), this.flag1.redraw(), this.flag2.setPosition({x:this.serie.getMaxX()}), this.flag2.redraw()), this.graph.draw()):(this.serie.setWaveform(Graph.newWaveform().setData([])), this.serieZone.setWaveform(Graph.newWaveform().setData([])), this.graph.draw(), this.flag1&&this.flag2&&(this.flag1.hide(), this.flag2.hide())));}componentWillReceiveProps(a){super.componentWillReceiveProps(a), 'sparkline'!==a.mode&&(this.graph.getYAxis().setLabel(a.axisLabel).setUnit(a.axisUnit), this.serie.setLabel(this.props.serieLabelLegend)), a.data_IV&&a.data_IV!==this.props.data_IV&&(this.shapes_IV.map(a=>{a&&a.kill();}), this.shapes_IV=a.data_IV.map(a=>{if(null===a[0])return!1;let b=this.graph.newShape('ellipse',{position:[{x:a[0],y:a[1]}]});return b.setFillColor('black'), b.setR('2px'), b.draw(), b.redraw(), b}));}render(){return React.createElement('div',{className:'cellGraph'},React.createElement('div',{id:'graph-snippet',className:'graph-snippet',ref:a=>this.graphDOM=a}))}}

var statuses={light:{version:"2.0",readonly:!1},heat:{version:"2.1"}};var instrument={"Small cells":{ADC:{model:"ADS1259"},changeSpeed:!1,fsr:400,LSB:4.88,LSBValue:1,voltageRange:10,autoZero:"device",groups:{"Sample holder":{manualLightIntensity:!0,resettable:!1,displayDeviceInformation:{time_ellapsed:!0,pce:!0,power:!1,sun:!0,voc:!0,jsc:!0,ff:!0,vnow:!0,jnow:!0,temperature:!0,humidity:!0,kwh_yr:!1}}}}};var environment = {ageing:!0,statuses:statuses,instrument:instrument};

const color='#55310d';class statusIV extends GraphComponent{constructor(a){super(a);}componentDidMount(){if(this.graphDOM){this.graph=new Graph(this.graphDOM,{paddingTop:5,paddingLeft:0,paddingRight:0,paddingBottom:5,closeColor:color}), this.resize(this.props), this.serie=[], this.graph.setBackgroundColor('rgba( 255, 255, 255, 0.2 )'), this.graph.getLeftAxis().setLineAt([0]).gridsOff().setAxisColor(color).setPrimaryTicksColor(color).setSecondaryTicksColor(color).setTicksLabelColor(color).setLabelColor(color), this.graph.getBottomAxis().gridsOff().setAxisColor(color).setPrimaryTicksColor(color).setSecondaryTicksColor(color).setLabelColor(color).setTicksLabelColor(color), this.graph.getYAxis().flip().setLabel('Current').setUnitWrapper('(',')').setEngineering(!0).setUnit('A').setUnitDecade(!0), this.graph.getXAxis().setLabel('Voltage').setUnitWrapper('(',')').setUnit('V');var a=this.graph.makeLegend({paddingLeft:0,paddingRight:2,paddingTop:10,paddingBottom:0,frame:!1,backgroundColor:'transparent',color:color});a.setPosition({x:'max',y:'max'},'right','top'), a.notHideable(), a.update(), this.ellipse=this.graph.newShape('ellipse'), this.ellipse.setR('3px','3px'), this.ellipse.setFillColor(color), this.ellipse.setStrokeColor(color), this.ellipse.draw();}}componentWillUpdate(a){let b=!1;if(a.updatedTime===this.props.updatedTime?this.props.data.length===a.data.length?a.data.map((a,c)=>{this.props.data[c]&&a.time==this.props.data[c].time||(b=!0);}):b=!0:b=!0, console.log(b), b){a.data.sort((c,a)=>c.time-a.time);let b=[];if(!a.data[0])return;const c=a.data[0].time,d=a.data[a.data.length-1].time;let e=0;a.data.forEach((f,g)=>{(f.time-e>(d-c)/4||5>=a.data.length||g==a.data.length-1)&&(e=f.time, b.push(g));});const f=['#ae182d','#6d18ae','#1834ae','#1897ae','#18ae22','#acae18'];let g=0;a.data.forEach((a,d)=>{if(-1!=b.indexOf(d)&&0!=a.iv.getLength()){let b=this.graph.newSerie('iv_'+g);b.setLabel(Math.round(10*((a.time-c)/1e3/3600))/10+'h'), b.setLineColor(f[g]), b.autoAxis(), b.setLineWidth(2);let d=this.graph.newSerie('power_'+g);d.setLineColor(f[g]), d.setLineStyle(2), d.excludedFromLegend=!0, d.autoAxis(), d.setLineWidth(2), b.setWaveform(a.iv), d.setWaveform(a.iv.duplicate().math((a,b)=>a*b)), g++;}}), this.serieIV=this.graph.newSerie('iv_time').setLabel('MPPT'), this.serieIV.autoAxes(), this.serieIV.setLineColor(color).setLineWidth(2), a.dataIV&&this.serieIV.setWaveform(a.dataIV), this.graph.autoscaleAxes(), this.graph.show(), this.graph.getYAxis().setLowestMin(1e-3*-environment.instrument[a.instrumentId].fsr), this.graph.getYAxis().setHighestMax(1e-3*environment.instrument[a.instrumentId].fsr), this.graph.getXAxis().setLowestMin(-environment.instrument[a.instrumentId].voltageRange), this.graph.getXAxis().setHighestMax(environment.instrument[a.instrumentId].voltageRange), this.graph.autoscaleAxes(), this.graph.draw(), this.graph.updateLegend();}}componentDidUpdate(){this.ellipse.setPosition({x:this.props.voltage,y:this.props.current/1e3}), this.ellipse.redraw();}render(){return React.createElement('div',{className:'cellIV'},React.createElement('div',{id:'graph-snippet',className:'graph-snippet',ref:a=>this.graphDOM=a}))}}

class CellButtons extends React.Component{constructor(a){super(a);}render(){return React.createElement("div",null,!!this.props.cfg&&React.createElement("button",{className:"btn btn-sm btn-default",onClick:this.props.cfg},React.createElement("span",{className:"glyphicon glyphicon-cog"})),!!this.props.button_start&&React.createElement("button",{className:"btn btn-sm btn-success",onClick:this.props.start},React.createElement("span",{className:"glyphicon glyphicon-play"})),!!this.props.button_stop&&React.createElement("button",{className:"btn btn-sm btn-danger",onClick:this.props.stop},React.createElement("span",{className:"glyphicon glyphicon-stop"})),!!this.props.button_jsc&&React.createElement("button",{type:"button",className:(this.props.button_jsc_disabled?"disabled ":"")+"btn btn-primary btn-sm",onClick:this.props.recordJsc},React.createElement("span",{className:"glyphicon glyphicon-record"})," J",React.createElement("sub",null,"sc")),!!this.props.button_voc&&React.createElement("button",{type:"button",className:(this.props.button_voc_disabled?"disabled ":"")+"btn btn-primary btn-sm",onClick:this.props.recordVoc},React.createElement("span",{className:"glyphicon glyphicon-record"})," V",React.createElement("sub",null,"oc")),!!this.props.button_iv&&React.createElement("button",{type:"button",className:(this.props.button_iv_disabled?"disabled ":"")+"btn btn-primary btn-sm",onClick:this.props.recordIV},React.createElement("span",{className:"glyphicon glyphicon-record"})," IV"),!!this.props.button_download&&React.createElement("button",{type:"button",className:"btn btn-primary btn-sm",onClick:this.props.downloadData},React.createElement("span",{className:"glyphicon glyphicon-download"})),!!this.props.button_details&&React.createElement("button",{type:"button",className:"btn btn-primary btn-sm",onClick:this.props.details},React.createElement("span",{className:"glyphicon glyphicon-chevron-down"})))}}

class Timer extends React.Component{constructor(a){super(a), this.state={now:Date.now()};}componentDidMount(){this.interval=setInterval(()=>void 0===this.props.timerValue||isNaN(this.props.timerValue.time)?void 0:null===this.props.timerValue.time?void this.setState({timerValue:NaN}):void('ascending'==this.props.direction?this.setState({timerValue:Date.now()-this.props.timerValue.updated+this.props.timerValue.time}):this.setState({timerValue:this.props.timerValue.time-(Date.now()-this.props.timerValue.updated)})),1e3);}componentWillUnmount(){clearInterval(this.interval);}componentWillReceiveProps(){}processTime(a){var b=Math.floor;if(0>a&&this.props.negative)return this.props.negative;let c=[],d=this.props.spacer||'';return a/=1e3, 60<a&&(1<this.props.maxLevel||!this.props.maxLevel)&&(3600<a&&(2<this.props.maxLevel||!this.props.maxLevel)&&(86400<a&&(3<this.props.maxLevel||!this.props.maxLevel)&&(c.push(b(a/86400)+d+'d'), a%=86400), c.push(b(a/3600)+d+'h'), a%=3600), c.push(b(a/60)+d+'m'), a%=60), c.push(b(a)+d+'s'), c=c.splice(0,this.props.precision||1), c.join(' ')}render(){return!this.state.timerValue||isNaN(this.state.timerValue)?React.createElement('span',null,'N/A'):React.createElement('span',null,this.processTime(this.state.timerValue))}}

let getIVParameters=(a,b,c,d,e=!1)=>{let f,g;try{f=a.getY(a.getIndexFromX(0));}catch(a){f=NaN;}try{g=a.getX(a.findLevel(0));}catch(a){g=NaN;}let h=e?b.getMaxY():b.getMinY();let i=h/(f*g),j=Math.round(100*(100*(1e3*h/c/(d/10))))/100*(e?1:-1),k=b.findLevel(h),l=b.getX(k);return{isc:1e3*f*(e?1:-1),jsc:1e3*(f/c)*(e?1:-1),voc:g,ff:100*i,powerin:d,power:1e3*h,pce:j,jmax:0,vmax:l}};

let query=function(a,b,c){return new Promise(d=>{let e={};e.q=a, e.db=b, e.u=c.username, e.p=c.password, $$1.get("http://"+c.host+":"+c.port+"/query",e,function(a){d(a.results);});})};const address=a=>"http://"+a.host+":"+a.port+"/";let ping=a=>new Promise((b,c)=>{fetch(address(a)+"ping",{method:"GET"}).then(a=>b(a)), setTimeout(c,1e3);});

const buildURL=a=>`http://${a.trackerHost}:${a.trackerPort}/`; const fetchGET=a=>fetch(a,{method:'GET'}); const fetchGETJson=a=>fetchGET(a).then(a=>a.json()); const fetchPOST=(a,b)=>{const c=JSON.stringify(b),d=new Headers({"Content-Type":'application/json',"Content-Length":c.length.toString()});fetch(a,{headers:d,method:'POST',body:c});};const autoZero=(a,b,c)=>fetchGET(urllib.formatUrl(`${buildURL(a)}instrument.autoZero`,{instrumentId:b,channelId:c}));const getChannelStatus=(a,b,c)=>fetchGETJson(urllib.formatUrl(`${buildURL(a)}getStatus`,{instrumentId:b,chanId:c}));const saveChannelStatus=(a,b)=>fetchPOST(`${buildURL(a)}setStatus`,b);const saveChannelStatuses=(a,b)=>fetchPOST(`${buildURL(a)}setStatuses`,b);const resetChannelStatus=(a,b,c)=>fetchGET(urllib.formatUrl(`${buildURL(a)}resetStatus`,{instrumentId:b,chanId:c}));const channelExecuteIV=(a,b,c)=>fetchGET(urllib.formatUrl(`${buildURL(a)}executeIV`,{instrumentId:b,chanId:c}));const channelExecuteVoc=(a,b,c)=>fetchGET(urllib.formatUrl(`${buildURL(a)}recordVoc`,{instrumentId:b,chanId:c}));const channelExecuteJsc=(a,b,c)=>fetchGET(urllib.formatUrl(`${buildURL(a)}recordJsc`,{instrumentId:b,chanId:c}));

var instrumentEnvironment=environment.instrument;const initialState={display:"eff",ellapsed:!1,wsEllapsed:!1,changeRate:!1,absChangeRate:!1,changeUnit:!1,iv:null,data:null,data_IV:null,iv:null,efficiency:!1,start_value:!1,highest_value:!1,voltage:!1,ff:!1,current:!1,currentdensity:!1,voc:!1,jsc:!1,sun:!1,start:!1,current:!1,arrowstatus:!1,change:!1,showDetails:!1,last_time:0,_last_iv_time:!1,_last_iv:null,_fist_iv:null,ivCurves:[],serverState:{}};function round(a,b){var c=Math.pow;return Math.round(a*c(10,b))/c(10,b)}class TrackerDevice extends React.Component{constructor(a){super(a), this.unit={voltage:React.createElement("span",null,"V"),currentdensity:React.createElement("span",null,"mA cm",React.createElement("sup",null,"-2")),current:React.createElement("span",null,"mA"),efficiency:React.createElement("span",null,"%"),fillfactor:React.createElement("span",null,"%"),power:React.createElement("span",null,"W"),sun:React.createElement("span",null,"sun"),area:React.createElement("span",null,"cm",React.createElement("sup",null,"2")),temperature:React.createElement("span",null,"\xB0C"),humidity:React.createElement("span",null,"%")}, this.state=extend(!0,{},initialState), this.state.data=Graph.newWaveform(), this.cfg=this.cfg.bind(this), this.start=this.start.bind(this), this.stop=this.stop.bind(this), this.pause=this.pause.bind(this), this.recordIV=this.recordIV.bind(this), this.recordJsc=this.recordJsc.bind(this), this.recordVoc=this.recordVoc.bind(this), this.downloadData=this.downloadData.bind(this), this.autoZero=this.autoZero.bind(this), this.wsUpdate=this.wsUpdate.bind(this);}componentWillReceiveProps(a){this.setState({updating:!1}), this.props.serverState!==a.serverState&&this.setState({serverState:a.serverState}), (0<a.serverState.tracking_mode&&a.measurementName&&a.measurementName!==this.props.measurementName||!this.state.serverState)&&this.updateInfluxData(a.serverState);}componentDidMount(){this.setState({updating:!1}), this.setState({serverState:this.props.serverState}), 0<this.props.serverState.tracking_mode&&this.updateInfluxData(this.props.serverState), electron.ipcRenderer.on("channel.update."+this.props.instrumentId+"."+this.props.chanId,this.wsUpdate);}componentWillUnmount(){this.refreshInterval&&(clearTimeout(this.refreshInterval), this.refreshInterval=!0), electron.ipcRenderer.removeListener("channel.update."+this.props.instrumentId+"."+this.props.chanId,this.wsUpdate);}async wsUpdate(a,b){var c=Math.abs;let d={};if(b.state=b.state||{}, b.timer=b.timer||{}, b.action=b.action||{}, b.state.efficiency&&(d.efficiency=round(b.state.efficiency,2)), b.state.current&&(d.current=round(1e3*b.state.current,3), d.currentdensity=1e3*b.state.current/this.state.serverState.cellArea), b.state.voltage&&(d.voltage=round(b.state.voltage,3)), b.state.voltage&&b.state.current&&this.state.data_IV&&c(1e3*b.state.current)<environment.instrument[this.props.instrumentId].fsr&&c(b.state.voltage)<environment.instrument[this.props.instrumentId].voltageRange&&(this.state.data_IV.append(b.state.voltage,b.state.current), d.data_IV=this.state.data_IV), b.state.power&&(d.power=round(b.state.power,5)), b.state.voc&&(d.voc=round(b.state.voc,2)), b.state.sun&&(d.sun=round(b.state.sun,2)), b.state.jsc&&(d.jsc=1e3*b.state.jsc/this.state.serverState.cellArea), b.state.temperature&&(d.temperature=b.state.temperature), b.state.temperature_junction&&(d.temperature_junction=b.state.temperature_junction), b.state.humidity&&(d.humidity=b.state.humidity), isNaN(b.timer.iv)?null===b.timer.iv&&(d.timer_nextIV={time:null,updated:Date.now()}):d.timer_nextIV={time:b.timer.iv,updated:Date.now()}, isNaN(b.timer.jsc)?null===b.timer.jsc&&(d.timer_nextJsc={time:null,updated:Date.now()}):d.timer_nextJsc={time:b.timer.jsc,updated:Date.now()}, isNaN(b.timer.voc)?null===b.timer.voc&&(d.timer_nextVoc={time:null,updated:Date.now()}):d.timer_nextVoc={time:b.timer.voc,updated:Date.now()}, isNaN(b.timer.aquisition)||(d.timer_aquisition={time:b.timer.aquisition,updated:Date.now()}), isNaN(b.timer.ellapsed)||(d.timer_ellapsed={time:b.timer.ellapsed,updated:Date.now()}), b.action.data){let a;this.state.data&&this.state.data.getLength&&0<this.state.data.getLength()?(a=this.state.data.xdata.data[this.state.data.getLength()-1], a+=this.state.serverState.tracking_record_interval/1e3/3600):a=0;let c;switch(c=this.state.data?this.state.data:Graph.newWaveform(), this.parameter){case"efficiency":c.append(a,b.state.efficiency);break;case"voltage_mean":c.append(a,b.state.voltage);break;case"current_mean":c.append(a,b.state.curent);break;case"power_mean":c.append(a,b.state.power);break;default:}d.data=c;}b.action.ivCurve&&this.updateInfluxData(), b.action.saved&&this.updateInfluxData(), b.action.update&&(await this.getStatus()), b.action.stopped&&(await this.getStatus(), d=extend(!0,{},initialState), this.state=d), this.setState(d);}saveStatus(a){return saveChannelStatus(this.props.config,a)}resetChannel(){return resetChannelStatus(this.props.config,this.props.instrumentId,this.props.chanId)}async recordIV(){if(!this.state.processing_iv){this.setState({processing_iv:!0,error_iv:!1});try{await channelExecuteIV(this.props.config,this.props.instrumentId,this.props.chanId);}catch(a){this.setState({error_iv:!0});}this.setState({processing_iv:!1});}}async recordVoc(){if(!this.state.processing_voc){this.setState({processing_voc:!0,error_voc:!1});try{await channelExecuteVoc(this.props.config,this.props.instrumentId,this.props.chanId);}catch(a){this.setState({error_voc:!0});}this.setState({processing_voc:!1});}}async recordJsc(){if(!this.state.processing_jsc){this.setState({processing_jsc:!0,error_jsc:!1});try{await channelExecuteJsc(this.props.config,this.props.instrumentId,this.props.chanId);}catch(a){this.setState({error_jsc:!0});}this.setState({processing_jsc:!1});}}downloadData(){electron.ipcRenderer.send("downloadData",this.props.config,this.state.serverState.measurementName,this.props.chanId,this.props.instrumentId);}autoZero(){return autoZero(this.props.config,this.props.instrumentId,this.props.chanId).catch(a=>{this.setState({error:a});})}componentDidUpdate(){}pause(){this.state.serverState.enable=0, this.saveStatus(this.state.serverState);}start(){this.saveStatus(Object.assign({},this.state.serverState,{enable:1,measurementName:this.state.serverState.cellName+"_"+Date.now()}));}stop(){this.data_sun=!1, this.data_humidity=!1, this.data_temperature=!1, this.resetChannel();}cfg(){electron.ipcRenderer.once("channelConfigured",(a,b)=>{b.chanId!=this.props.chanId||("manual"!==b.lightSource&&(b.lightRefValue=0), this.saveStatus(b));}), electron.ipcRenderer.send("configChannel",{instrumentId:this.props.instrumentId,groupName:this.props.groupName,chanId:this.props.chanId,trackerHost:this.props.config.trackerHost,trackerPort:this.props.config.trackerPort});}getStatus(){return getChannelStatus(this.props.config,this.props.instrumentId,this.props.chanId).then(a=>{this.setState({serverState:a[this.props.groupName].channels[this.props.chanId]});}).catch(a=>{this.setState({error:a});})}readIV(a){if(a){let c=a.replace("\"","").split(",").map(a=>parseFloat(a)),d=Graph.newWaveform();for(var b=0;b<c.length-1;b+=2)d.append(c[b],c[b+1]);return d}}updateInfluxData(a=this.state.serverState){var b=Math.abs,c=Math.round;let d,e,f,g,h,i={},j=this.props.configDB.db,k=[];if(i.influxTime=Date.now(), !!a.measurementName){switch(this.state.serverState.tracking_mode){case 3:d="current_mean", e="jsc";break;case 2:d="voltage_mean", e="voc";break;default:case 1:d="efficiency", e="pce";}this.parameter=d;let l=[`SELECT time, efficiency, power FROM "${encodeURIComponent(a.measurementName)}" ORDER BY time ASC limit 1`,`SELECT time, efficiency, power_mean, current_mean, voltage_mean, sun, pga, temperature_base, temperature_vsensor, temperature_junction, humidity FROM "${encodeURIComponent(a.measurementName)}" ORDER BY time DESC limit 1`,`SELECT time, iv, sun FROM "${encodeURIComponent(a.measurementName)}_iv" ${this.state._last_iv_time?`WHERE time > '${this.state._last_iv_time}'`:""} ORDER BY time ASC`,`SELECT voc FROM "${encodeURIComponent(a.measurementName)}_voc" ORDER BY time DESC LIMIT 1`,`SELECT jsc FROM "${encodeURIComponent(a.measurementName)}_jsc" ORDER BY time DESC LIMIT 1`];query(l.join(";"),j,this.props.configDB).then(l=>{if(l[2].series&&l[2].series[0]&&(i.ivCurves=this.state.ivCurves.splice(0), i.ivCurves=i.ivCurves.concat(l[2].series[0].values.map((a,b)=>{b==l[2].series[0].values.length-1&&(i._last_iv_time=a[0]);let c,d=new Date(a[0]);return l[0].series?(c=new Date(l[0].series[0].values[0][0]), c=c.getTime()):c=null, {time:d,iv:this.readIV(a[1]),sun:a[2],ellapsed:null===c?null:(d.getTime()-c)/36e5}})), i.iv_values=i.ivCurves.map(a=>{const b=a.iv.duplicate().math((a,b)=>a*b),c=getIVParameters(a.iv,b,this.state.serverState.cellArea,1e3*a.sun,!0);return[a.ellapsed,c[e]]})), !!l[0].series){let e=l[0].series[0].values[0][0],m=l[1].series[0].values[0][0],n=new Date(e),o=new Date(m);i.latest=o.getTime(), i.start_value=c(100*l[0].series[0].values[0][1])/100, i.efficiency=round(l[1].series[0].values[0][1],2), i.power=c(1e6*l[1].series[0].values[0][2])/1e6, i.current=1e3*l[1].series[0].values[0][3], i.currentdensity=1e3*l[1].series[0].values[0][3]/a.cellArea, i.voltage=parseFloat(l[1].series[0].values[0][4]).toPrecision(3), i.sun=c(100*l[1].series[0].values[0][5])/100, i.pga=l[1].series[0].values[0][6], i.temperature_base=l[1].series[0].values[0][7], i.temperature_vsensor=l[1].series[0].values[0][8], i.temperature_junction=l[1].series[0].values[0][9], i.humidity=l[1].series[0].values[0][10];let p=(o-n)/1e3;return i.last_time=o, i.ellapsed=p, g=Math.max(1,c(p/100)), f=259200<p?j:300<p?j:j, l[3]&&l[3].series&&1==this.state.serverState.tracking_mode&&(i.voc=c(1e3*l[3].series[0].values[0][1])/1e3), l[4]&&l[4].series&&1==this.state.serverState.tracking_mode&&(i.jsc=1e3*(l[4].series[0].values[0][1]/a.cellArea)), (-1==l[1].series[0].values[0][1]||.015>l[1].series[0].values[0][5])&&(d="power_mean"), this.parameter=d, h="SELECT MEAN("+d+") as param, MAX("+d+") as maxEff, MEAN(voltage_mean) as vMean, MEAN(current_mean) as cMean, MEAN( sun ) as sMean, MEAN( temperature_junction ) as tMean, MEAN( humidity ) as hMean, MEAN( power_mean ) as pMean  FROM \""+encodeURIComponent(a.measurementName)+"\" WHERE time >= '"+e+"' and time <= '"+m+"'  GROUP BY time("+g+"s) FILL(none) ORDER BY time ASC; SELECT "+d+" FROM \""+encodeURIComponent(a.measurementName)+"\" ORDER BY time ASC LIMIT 1;", k.push(query(h,f,this.props.configDB).then(d=>{let e,f=d[0].series[0].values,g=Graph.newWaveform(),h=Graph.newWaveform(),j=Graph.newWaveform(),k=Graph.newWaveform(),l=Graph.newWaveform(),m=0,n=0;if(i.start_value=c(100*d[1].series[0].values[0][1])/100, 2>f.length)return void(i.data=!1);let o,p=1,q=0;f.forEach((a,c)=>{let d,i=new Date(a[0]);if(0==c?(e=i.getTime(), d=0):d=(i.getTime()-e)/1e3/3600, 0<d&&(q+=3600*((d-g.getX(g.getLength()-1))*(a[8]+o)/2)), o=a[8], 1!=this.state.serverState.tracking_mode)3==this.state.serverState.tracking_mode&&(a[p]*=1e3);else if(35<a[p]||0>a[p])return;g.append(d,a[p]), j.append(d,a[5]), c>.8*f.length&&b(1e3*a[4])<environment.instrument[this.props.instrumentId].fsr&&b(a[3])<environment.instrument[this.props.instrumentId].voltageRange&&h.append(a[3],a[4]), l.append(d,a[6]), k.append(d,a[7]), 1==this.state.serverState.tracking_mode&&a[1]>m&&!isNaN(a[1])&&(m=a[1], n=d);}), 2==this.state.serverState.tracking_mode&&(i.voc=c(1e3*f[f.length-1][2])/1e3), 3==this.state.serverState.tracking_mode&&(i.jsc=c(100*f[f.length-1][2])/100);let r=q/36e5;const s=8760*(r/g.getX(g.getLength()-1)),t=s/(a.cellArea/1e4);i.highest_value=c(100*m)/100, i.highest_value_time=n, i.data=g, i.data_sun=j, i.data_temperature=l, i.data_humidity=k, i.data_IV=h, i.kwh_yr_m2=c(100*t)/100;})), Promise.all(k).then(()=>{i.ff=c(100*(i.power/a.cellArea/(i.voc*i.jsc/1e3))), i.updating=!1;}).catch(a=>{console.error("Could not process influx DB request."), console.error(a);}).then(()=>{this.setState(i);})}}).catch(a=>{console.error("Could not process influx DB request."), console.error(a);}).then(()=>{this.setState(i);});}}processCurrent(a){var b=Math.round;return isNaN(a)||!1===a?void 0:1>Math.abs(a)?React.createElement("span",null,b(1e5*a)/100,"\xA0\u03BCA\xA0cm",React.createElement("sup",null,"-2")):React.createElement("span",null,(b(100*a)/100).toPrecision(3),"\xA0mA\xA0cm",React.createElement("sup",null,"-2"))}render(){let a,b,c,d,e,f,g,h;switch(this.parameter){case"efficiency":a="%", c=this.state.highest_value, d=this.state.highest_value_time, b=this.state.efficiency, e="MPPT", f="Efficiency", g="%", h="PCE";break;case"voltage_mean":a="V", c=this.state.start_value, d=0, b=this.state.voc, e="Voc", f="Voltage", g="V", h="Voc";break;case"current_mean":a=this.unit.currentdensity, c=this.state.start_value, d=0, b=this.state.jsc, e="Jsc", f="Current density", g="mA cm^-2", h="Jsc";break;case"power_mean":a=this.unit.power, c=this.state.start_value, d=0, b=this.state.power, e="MPPT", f="Power", g="W", h="Pout";break;default:e="No tracking";}let i=0<this.state.serverState.enable&&0<this.state.serverState.tracking_mode;const j=this.processCurrent(this.state.currentdensity),k=this.processCurrent(this.state.jsc);if(!instrumentEnvironment[this.props.instrumentId].groups[this.props.groupName])return React.createElement("div",{className:"alert alert-danger"},"Group could not be found in software config. Expecting \"",this.props.groupName,"\"");const l=instrumentEnvironment[this.props.instrumentId].groups[this.props.groupName].displayDeviceInformation,m="device"==instrumentEnvironment[this.props.instrumentId].autoZero?React.createElement("button",{className:"btn btn-cl",onClick:this.autoZero}," Auto zero"):null;return i?React.createElement("div",{ref:a=>this.wrapper=a,className:"cl-device "+(i?"cell-running":"cell-stopped")+" show-details"},React.createElement("div",{className:"col-lg-7"},React.createElement("div",{className:"cell-name cell-main-info row"},React.createElement("div",{className:"col-lg-9"},React.createElement("span",null,React.createElement("input",{type:"checkbox",className:"channel-check",onClick:this.props.toggleChannelCheck,checked:!!this.props.channelChecked})),React.createElement("span",{className:"label"},React.createElement("span",{className:"glyphicon glyphicon-tags"})),React.createElement("span",{className:"value"},this.state.serverState.cellName)," ",this.state.serverState.cellArea?React.createElement("span",{className:"cell-area"},"( ",this.state.serverState.cellArea," cm",React.createElement("sup",null,"2")," )"):"")),React.createElement("div",{className:"cell-timing row"},React.createElement("div",{className:"col-xs-1"},React.createElement("div",null,"Last data"),React.createElement("div",null,React.createElement(Timer,{precision:1,direction:"ascending",timerValue:this.state.timer_aquisition}))),React.createElement("div",{className:"col-xs-1 propElement"+(this.state.processing_iv?" processing":"")+(this.state.error_iv?" processing-error":"")},React.createElement("div",{className:"record"},React.createElement("span",{className:"glyphicon glyphicon-record",onClick:this.recordIV})),React.createElement("div",null,"Next IV curve"),React.createElement("div",null,React.createElement(Timer,{negative:"Overdue",precision:2,direction:"descending",timerValue:this.state.timer_nextIV}))),React.createElement("div",{className:"col-xs-1 propElement"+(this.state.processing_voc?" processing":"")+(this.state.error_voc?" processing-error":"")},React.createElement("div",{className:"record"},React.createElement("span",{className:"glyphicon glyphicon-record",onClick:this.recordVoc})),React.createElement("div",null,"Next Voc"),React.createElement("div",null,React.createElement(Timer,{negative:"Overdue",precision:2,direction:"descending",timerValue:this.state.timer_nextVoc}))),React.createElement("div",{className:"col-xs-1 propElement"+(this.state.processing_jsc?" processing":"")+(this.state.error_jsc?" processing-error":"")},React.createElement("div",{className:"record"},React.createElement("span",{className:"glyphicon glyphicon-record",onClick:this.recordJsc})),React.createElement("div",null,"Next Jsc"),React.createElement("div",null,React.createElement(Timer,{negative:"Overdue",precision:2,direction:"descending",timerValue:this.state.timer_nextJsc})))),React.createElement("div",{className:"cell-summary row"},React.createElement("div",{className:`col-lg-1 cell-status ${i?"active":""}`},React.createElement("div",null,i?React.createElement("span",{className:"glyphicon glyphicon-record"}):React.createElement("span",{className:"glyphicon glyphicon-stop"})),e),l.time_ellapsed&&React.createElement("div",{className:"col-lg-1 propElement"},React.createElement("div",null,React.createElement("div",{className:"label"},React.createElement("span",{className:"glyphicon glyphicon-hourglass"})),React.createElement("div",{className:"value"},React.createElement(Timer,{precision:1,maxLevel:3,spacer:" ",direction:"ascending",timerValue:this.state.timer_ellapsed})))),l.pce&&React.createElement("div",{className:"col-xs-1 propElement"},React.createElement("div",null,React.createElement("div",{className:"label"},"\u03B7"),React.createElement("div",{className:"value"},React.createElement("strong",null,!isNaN(this.state.efficiency)&&!1!==this.state.efficiency&&0<=this.state.efficiency?React.createElement("span",null,this.state.efficiency," ",this.unit.efficiency):"N/A")))),l.power&&React.createElement("div",{className:"col-xs-1 propElement"},React.createElement("div",null,React.createElement("div",{className:"label"},"P",React.createElement("sub",null,"out")),React.createElement("div",{className:"value"},React.createElement("strong",null,isNaN(this.state.power)||!1===this.state.power?"N/A":React.createElement("span",null,this.state.power," ",this.unit.power))))),l.sun&&React.createElement("div",{className:"col-xs-1 propElement"},React.createElement("div",null,React.createElement("div",{className:"label"},React.createElement("span",{className:"glyphicon glyphicon-scale"})),React.createElement("div",{className:"value"},!isNaN(this.state.sun)&&!1!==this.state.sun&&0<=this.state.sun?React.createElement("span",null,this.state.sun," ",this.unit.sun):"N/A"))),l.voc&&React.createElement("div",{className:"col-xs-1 propElement"+(this.state.processing_voc?" processing":"")+(this.state.error_voc?" error":"")},React.createElement("div",{className:"record"},React.createElement("span",{className:"glyphicon glyphicon-record",onClick:this.recordVoc})),React.createElement("div",{className:"label"},"V",React.createElement("sub",null,"oc")),React.createElement("div",{className:"value"},isNaN(this.state.voc)||!1===this.state.voc?"N/A":React.createElement("span",null,this.state.voc," ",this.unit.voltage))),l.jsc&&React.createElement("div",{className:"col-xs-1 propElement"+(this.state.processing_jsc?" processing":"")+(this.state.error_jsc?" error":"")},React.createElement("div",{className:"record"},React.createElement("span",{className:"glyphicon glyphicon-record",onClick:this.recordJsc})),React.createElement("div",{className:"label"},"J",React.createElement("sub",null,"sc")),React.createElement("div",{className:"value"},k||"N/A")),l.ff&&React.createElement("div",{className:"col-xs-1 propElement"},React.createElement("div",{className:"label"},"FF"),React.createElement("div",{className:"value"},isNaN(this.state.ff)||!1===this.state.ff?"N/A":React.createElement("span",null,this.state.ff," ",this.unit.fillfactor))),l.vnow&&React.createElement("div",{className:"col-xs-1 propElement"},React.createElement("div",{className:"label"},"V",React.createElement("sub",null,"now")),React.createElement("div",{className:"value"},isNaN(this.state.voltage)||!1===this.state.voltage?"N/A":React.createElement("span",null,this.state.voltage," ",this.unit.voltage))),l.jnow&&React.createElement("div",{className:"col-xs-1 propElement"},React.createElement("div",{className:"label"},"J",React.createElement("sub",null,"now")),React.createElement("div",{className:"value"},j||"N/A")),l.temperature&&React.createElement("div",{className:"col-lg-1 propElement"},React.createElement("div",null,React.createElement("div",{className:"label"},React.createElement("span",{className:"glyphicon glyphicon-grain"})),React.createElement("div",{className:"value"},this.state.temperature&&0<this.state.temperature?React.createElement("span",{title:"Base temperature (local temperature on the chip just under the device)"},this.state.temperature):"N/A","\xA0/\xA0",this.state.temperature_junction&&0<this.state.temperature_junction?React.createElement("span",{title:"Estimated junction temperature (base temperature + thermopile voltage)"},this.state.temperature_junction," ",this.unit.temperature):"N/A"))),l.humidity&&React.createElement("div",{className:"col-lg-1 propElement"},React.createElement("div",null,React.createElement("div",{className:"label"},React.createElement("span",{className:"glyphicon glyphicon-tint"})),React.createElement("div",{className:"value"},!isNaN(this.state.humidity)&&0<=this.state.humidity?React.createElement("span",null,this.state.humidity," ",this.unit.humidity):"N/A"))),l.kwh_yr&&React.createElement("div",{className:"col-lg-1 propElement"},React.createElement("div",null,React.createElement("div",{className:"label"},"kWh yr",React.createElement("sup",null,"-1"),"m",React.createElement("sup",null,"-2")),React.createElement("div",{className:"value"},this.state.kwh_yr_m2&&0<this.state.kwh_yr_m2?React.createElement("span",null,this.state.kwh_yr_m2):"N/A"))),React.createElement("div",{className:"cell-efficiency col-lg-6"},React.createElement(statusGraph,{shown:!0,width:"720",height:"60",mode:"default",key:this.props.instrumentId+this.props.chanId+"_graph",data:this.state.data,flag1:c,flag1_pos:d,unit:a,axisLabel:f,axisUnit:g,serieLabelLegend:h,flag2:b,data_IV:this.state.iv_values}))),React.createElement("div",{className:"row cell-actions"},React.createElement("div",{className:"col-lg-1 label"},"Actions"),React.createElement("div",{className:"col-lg-8"},React.createElement("button",{className:"btn btn-cl",onClick:this.downloadData},React.createElement("span",{className:"glyphicon glyphicon-download-alt"})," Download"),m,React.createElement("button",{className:"btn btn-cl",onClick:this.stop},React.createElement("span",{className:"glyphicon glyphicon-stop"})," Stop"),React.createElement("button",{className:"btn btn-cl",onClick:this.cfg},React.createElement("span",{className:"glyphicon glyphicon-cog"})," Configure")))),React.createElement("div",{className:"col-lg-2 cell-iv"},React.createElement(statusIV,{width:"290",height:"230",shown:!0,instrumentId:this.props.instrumentId,data:this.state.ivCurves,dataIV:this.state.data_IV,voltage:this.state.voltage,current:this.state.current,cellarea:this.state.serverState.cellArea,updatedTime:this.state.influxTime}))):React.createElement("div",{ref:a=>this.wrapper=a,className:"cl-device cell-unknown"},React.createElement("div",{className:"cell-name cell-main-info row"},React.createElement("div",{className:"col-lg-4"},React.createElement("span",null,React.createElement("input",{type:"checkbox",className:"channel-check",onClick:this.props.toggleChannelCheck,checked:!!this.props.channelChecked})),React.createElement("span",{className:"label"},React.createElement("span",{className:"glyphicon glyphicon-tags"})),React.createElement("span",{className:"value"},this.state.serverState.cellName?this.state.serverState.cellName:React.createElement("span",null,"Channel #",this.props.chanId))),React.createElement("div",{className:"col-lg-4"},React.createElement("button",{className:"btn btn-cl btn-sm",onClick:this.cfg},React.createElement("span",{className:"glyphicon glyphicon-cog"})," Configure"),!!(this.state.serverState.cellName&&0<this.state.serverState.cellName.length&&!i&&0<this.state.serverState.tracking_mode)&&React.createElement("div",null,React.createElement("button",{className:"btn btn-cl btn-sm",onClick:this.start},React.createElement("span",{className:"glyphicon glyphicon-start"})," Start")," ",m))))}}

class LightStatus extends React.Component{constructor(){super(...arguments), this.state={}, this.wsUpdate=this.wsUpdate.bind(this);}componentDidMount(){electron.ipcRenderer.on("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate);}componentWillUnmount(){electron.ipcRenderer.removeListener("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate);}wsUpdate(a,b){this.setState(b.data), this.toggleLightMode&&$(this.toggleLightMode).bootstrapToggle("enable");}componentDidUpdate(){this.toggleLightMode&&!this.transformed&&($(this.toggleLightMode).bootstrapToggle({on:"Auto",off:"Manual"}).change(()=>{$(this.toggleLightMode).bootstrapToggle("disable");let a={instrumentId:this.props.instrumentId,groupName:this.props.name,control:{modeAutomatic:this.toggleLightMode.checked}},b=JSON.stringify(a),c=new Headers({"Content-Type":"application/json","Content-Length":b.length.toString()});fetch("http://"+this.props.config.trackerHost+":"+this.props.config.trackerPort+"/lightSetControl",{headers:c,method:"POST",body:b}).then(()=>{$(this.toggleLightMode).bootstrapToggle("enable");}).catch(()=>{electron.ipcRenderer.send("reportError","Unable to change the light mode");});}), this.transformed=!0), this.toggleLightMode&&$(this.toggleLightMode).data("bs.toggle")[this.state.lightAutomatic?"on":"off"](!0);}render(){return React.createElement("div",null,React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},React.createElement("span",{className:"grey"},"Mode:")),React.createElement("div",{className:"col-lg-4"},React.createElement("label",null,React.createElement("input",{"data-toggle":"toggle",type:"checkbox",ref:a=>this.toggleLightMode=a,"data-width":"100","data-height":"25"})))),this.state.lightAutomatic&&this.state.lightSetpoint!==void 0?React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},React.createElement("span",{className:"grey"},"Set point:")),React.createElement("div",{className:"col-lg-4"},this.state.lightSetpoint," sun")):null,this.state.lightValue===void 0?null:React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},React.createElement("span",{className:"grey"},"Live value:")),React.createElement("div",{className:"col-lg-4"},Math.round(100*this.state.lightValue[0])/100," sun")))}}

class LightStatus$1 extends React.Component{constructor(){super(...arguments), this.state={}, this.wsUpdate=this.wsUpdate.bind(this);}componentDidMount(){electron.ipcRenderer.on("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate);}componentWillUnmount(){electron.ipcRenderer.removeListener("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate);}wsUpdate(a,b){this.setState(b.data), this.toggleLightEnable&&$(this.toggleLightEnable).bootstrapToggle("enable");}componentDidUpdate(){this.toggleLightEnable&&!this.transformed&&($(this.toggleLightEnable).bootstrapToggle({on:"On",off:"Off"}).change(()=>($(this.toggleLightEnable).bootstrapToggle("disable"), fetch(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/light.${this.toggleLightEnable.checked?"enable":"disable"}?instrumentId=${this.props.instrumentId}&groupName=${this.props.name}`,{method:"GET"}).then(()=>{}).catch(()=>{electron.ipcRenderer.send("reportError","Unable to change the light mode");}).then(()=>{}))), this.transformed=!0), this.toggleLightEnable&&$(this.toggleLightEnable).data("bs.toggle")[this.state.lightOnOff?"on":"off"](!0);}render(){return React.createElement("div",null,React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},React.createElement("span",{className:"grey"},"On/Off:")),React.createElement("div",{className:"col-lg-4"},React.createElement("label",null,React.createElement("input",{"data-toggle":"toggle",type:"checkbox",ref:a=>this.toggleLightEnable=a,"data-width":"70","data-height":"25"})))),this.state.lightOnOff?React.createElement("div",null,this.state.lightOnOffButton===this.state.lightOnOff?null:React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-9"},React.createElement("span",{className:"grey"},React.createElement("em",null,React.createElement("small",null,React.createElement("span",{className:"glyphicon glyphicon-danger"}),"The light switch is off. Push it to turn the light on."))))),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},React.createElement("span",{className:"grey"},"Control mode:")),React.createElement("div",{className:"col-lg-4"},"auto"==this.state.lightMode?React.createElement("span",null,"Automatic"):React.createElement("span",null,"Manual"))),"auto"==this.state.lightMode&&this.state.lightSetpoint!==void 0?React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},React.createElement("span",{className:"grey"},"Set point:")),React.createElement("div",{className:"col-lg-4"},this.state.lightSetpoint," sun")):null,this.state.lightValue===void 0?null:React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},React.createElement("span",{className:"grey"},"Current value:")),React.createElement("div",{className:"col-lg-4"},0>this.state.lightValue?0:this.state.lightValue.toPrecision(3)," sun")),"auto"==this.state.lightMode&&this.state.lightUVSetpoint!==void 0?React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},React.createElement("span",{className:"grey"},"UV(A) set point:")),React.createElement("div",{className:"col-lg-4"},this.state.lightUVSetpoint," mW cm",React.createElement("sup",null,"-2"))):null,this.state.lightUVValue===void 0?null:React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},React.createElement("span",{className:"grey"},"UV(A) intensity:")),React.createElement("div",{className:"col-lg-4"},isNaN(this.state.lightUVValue)||this.state.lightUVValue!==parseFloat(this.state.lightUVValue)?this.state.lightUVValue:0>this.state.lightUVValue?0:React.createElement("span",null,Math.round(1e3*this.state.lightUVValue)/1e3," mW cm",React.createElement("sup",null,"-2"))),React.createElement("div",{class:"text-warning"},React.createElement("strong",null,React.createElement("span",{className:"glyphicon glyphicon-danger"})," Caution !")," UV sensor readout can be influenced by the white light intensity"))):null)}}

class LightStatus$2 extends React.Component{constructor(){super(...arguments), this.state={}, this.wsUpdate=this.wsUpdate.bind(this);}componentDidMount(){electron.ipcRenderer.on("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate);}componentWillUnmount(){electron.ipcRenderer.removeListener("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate);}wsUpdate(a,b){this.setState(b.data);}componentDidUpdate(){}render(){return React.createElement("div",null,this.state.lightValue!==void 0&&null!==this.state.lightValue?React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},React.createElement("span",{className:"grey"},"Live value:")),React.createElement("div",{className:"col-lg-4"},this.state.lightValue.toPrecision(3)," sun")):"Current value unknown")}}

class LightStatus$3 extends React.Component{constructor(a){super(a), this.light_calibrate=this.light_calibrate.bind(this), this.light_controller_config=this.light_controller_config.bind(this), this.light_controller_setuv=this.light_controller_setuv.bind(this), this.wsUpdate=this.wsUpdate.bind(this), this.state={};}componentDidMount(){electron.ipcRenderer.on("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate);}componentWillUnmount(){electron.ipcRenderer.removeListener("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate);}wsUpdate(a,b){this.setState(b.data);}light_calibrate(a){electron.ipcRenderer.send(a,{instrumentId:this.props.instrumentId,groupName:this.props.name,config:this.props.config});}light_controller_config(){electron.ipcRenderer.send("scheduleLight",{instrumentId:this.props.instrumentId,groupName:this.props.name,config:this.props.config});}light_controller_setuv(){fetch(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/light.applyUV?instrumentId=${this.props.instrumentId}&groupName=${this.props.name}`,{method:"GET"});}render(){let a=null;if(!environment.statuses.light)return null;switch(environment.statuses.light.version){case"1.0":{a=React.createElement(LightStatus,this.props);break}case"readonly":{a=React.createElement(LightStatus$2,this.props);break}default:case"2.0":a=React.createElement(LightStatus$1,this.props);}let b;switch(environment.statuses.light.type){case"pyranometer":b=React.createElement("button",{type:"button",className:"btn btn-cl btn-default btn-sm",onClick:()=>this.light_calibrate("calibratePyranometer")},React.createElement("span",{className:"glyphicon glyphicon-scale"})," Calibrate pyranometer");break;case"photodiode":default:b=React.createElement("button",{type:"button",className:"btn btn-cl btn-default btn-sm",onClick:()=>this.light_calibrate("calibratePD")},React.createElement("span",{className:"glyphicon glyphicon-scale"})," Calibrate photodiode");}let c=null;return this.state.lightUVSetpoint&&(c=React.createElement("button",{className:"btn btn-cl btn-default btn-small",onClick:this.light_controller_setuv},"Apply UV intensity")), React.createElement("div",{className:"group-status group-status-light col-lg-2"},React.createElement("h4",null,"Light bias"),this.props.serverState.lightController?a:"No light control is available for this group",React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-9"},!environment.statuses.light.readonly&&React.createElement("button",{type:"button",className:"btn btn-cl btn-default btn-sm",onClick:this.light_controller_config},React.createElement("span",{className:"glyphicon glyphicon-cog"})," Configure"),b," ",c)))}}

class HeatStatus extends React.Component{constructor(){super(...arguments), this.state={}, this.wsUpdate=this.wsUpdate.bind(this), this.increaseHeatingPower=this.increaseHeatingPower.bind(this), this.decreaseHeatingPower=this.decreaseHeatingPower.bind(this);}increaseHeatingPower(){this.setState({heating_status:'updating'}), fetch(urllib.formatUrl(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/heat.increasePower`,{instrumentId:this.props.instrumentId,groupName:this.props.name})).then(()=>{this.setState({heater_error:!1});}).catch(()=>{this.setState({heater_error:'Cannot increase the heating power. Internal error'});});}decreaseHeatingPower(){this.setState({heating_status:'updating'}), fetch(urllib.formatUrl(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/heat.decreasePower`,{instrumentId:this.props.instrumentId,groupName:this.props.name})).then(()=>{this.setState({heater_error:!1});}).catch(()=>{this.setState({heater_error:'Cannot decrease the heating power. Internal error'});});}componentDidMount(){electron.ipcRenderer.on('group.update.'+this.props.instrumentId+'.'+this.props.name,this.wsUpdate);}componentWillUnmount(){electron.ipcRenderer.removeListener('group.update.'+this.props.instrumentId+'.'+this.props.name,this.wsUpdate);}wsUpdate(a,b){this.setState(b.data), this.toggleHeater&&$(this.toggleHeater).bootstrapToggle('enable');}componentDidUpdate(){this.toggleHeater&&!this.transformed&&($(this.toggleHeater).bootstrapToggle({on:'On',off:'Off'}).change(()=>{$(this.toggleHeater).bootstrapToggle('disable'), fetch(urllib.formatUrl(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/heat.${this.toggleHeater.checked?'enable':'disable'}`,{instrumentId:this.props.instrumentId,groupName:this.props.name})).then(()=>{$(this.toggleHeater).bootstrapToggle('enable');}).catch(()=>{electron.ipcRenderer.send('reportError','Unable to change the heater state');});}), this.transformed=!0), this.toggleHeater&&$(this.toggleHeater).data('bs.toggle')[this.state.heater_status?'on':'off'](!0);}render(){return console.log(this.state), this.props.serverState.heatController?React.createElement('div',null,React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},'Heater'),React.createElement('div',{className:'col-lg-4'},React.createElement('label',null,React.createElement('input',{"data-toggle":'toggle',type:'checkbox',ref:a=>this.toggleHeater=a,disabled:this.state.heater_status_updating,checked:this.state.heater_status,"data-width":'100',"data-height":'25'})))),this.state.heater_error?React.createElement('div',{className:'error'},this.state.heater_error):null,this.state.heater_status?void 0===this.state.heater_power?null:React.createElement('div',null,React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},'Heating power: ',Math.round(100*this.state.heater_power)+' %'),React.createElement('div',{className:'col-lg-4'},React.createElement('div',{className:'btn-group'},React.createElement('button',{type:'button',className:'btn-sm btn btn-default',onClick:this.increaseHeatingPower},'+'),'\xA0',React.createElement('button',{type:'button',className:'btn-sm btn btn-default',onClick:this.decreaseHeatingPower},'-'))))):null):null}}

class HeatStatus$1 extends React.Component{constructor(){super(...arguments), this.state={}, this.wsUpdate=this.wsUpdate.bind(this), this.increaseHeatingPower=this.increaseHeatingPower.bind(this), this.decreaseHeatingPower=this.decreaseHeatingPower.bind(this);}componentDidMount(){electron.ipcRenderer.on("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate);}componentWillUnmount(){electron.ipcRenderer.removeListener("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate);}increaseHeatingPower(){fetch(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/heat.increasePower?instrumentId=${this.props.instrumentId}&groupName=${this.props.name}`,{method:"GET"}).then(()=>{$(this.enableDCDC).bootstrapToggle("enable");}).catch(()=>{electron.ipcRenderer.send("reportError","Unable to enable / disable the heater");});}decreaseHeatingPower(){fetch(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/heat.decreasePower?instrumentId=${this.props.instrumentId}&groupName=${this.props.name}`,{method:"GET"}).then(()=>{$(this.enableDCDC).bootstrapToggle("enable");}).catch(()=>{electron.ipcRenderer.send("reportError","Unable to enable / disable the heater");});}wsUpdate(a,b){this.setState(b.data);}componentDidUpdate(){}render(){console.log(this.state);let a=20<this.state.heating_voltage/this.state.heating_current;return(1>this.state.heating_voltage||!this.state.heating_voltage)&&(a=!1), React.createElement("div",null,this.props.serverState.heatController?React.createElement("div",null,React.createElement("div",{className:"row"}),React.createElement("div",null,React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},"Heating power: ",this.state.heater_power+" W"),React.createElement("div",{className:"col-lg-4"},React.createElement("div",{className:"btn-group"},React.createElement("button",{type:"button",className:"btn-sm btn btn-default",onClick:this.increaseHeatingPower},"+"),"\xA0",React.createElement("button",{type:"button",className:"btn-sm btn btn-default",onClick:this.decreaseHeatingPower},"-")))),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},"Current: ",this.state.heater_current+" A")),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},"Voltage: ",this.state.heater_voltage+" V")),a?React.createElement("div",{className:"row"},React.createElement("span",{className:"grey"},React.createElement("span",{className:"glyphicon glyphicon-warning"})," The calculated heater resistance is off. Check that the pins are properly contacting the window")):null)):null)}}

class HeatStatus$2 extends React.Component{constructor(){super(...arguments), this.state={}, this.wsUpdate=this.wsUpdate.bind(this), this.increaseHeatingPower=this.increaseHeatingPower.bind(this), this.decreaseHeatingPower=this.decreaseHeatingPower.bind(this);}componentDidMount(){electron.ipcRenderer.on("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate);}componentWillUnmount(){electron.ipcRenderer.removeListener("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate);}increaseHeatingPower(){fetch(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/heat.increasePower?instrumentId=${this.props.instrumentId}&groupName=${this.props.name}`,{method:"GET"}).then(()=>{$(this.enableDCDC).bootstrapToggle("enable");}).catch(()=>{electron.ipcRenderer.send("reportError","Unable to enable / disable the heater");});}decreaseHeatingPower(){fetch(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/heat.decreasePower?instrumentId=${this.props.instrumentId}&groupName=${this.props.name}`,{method:"GET"}).then(()=>{$(this.enableDCDC).bootstrapToggle("enable");}).catch(()=>{electron.ipcRenderer.send("reportError","Unable to enable / disable the heater");});}wsUpdate(a,b){this.setState(b.data);}componentDidUpdate(){this.enableDCDC&&!this.transformed&&($(this.enableDCDC).bootstrapToggle({on:"On",off:"Off"}).change(()=>{$(this.enableDCDC).bootstrapToggle("disable"), fetch(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/heat.${this.enableDCDC.checked?"enable":"disable"}?instrumentId=${this.props.instrumentId}&groupName=${this.props.name}`,{method:"GET"}).then(()=>{$(this.enableDCDC).bootstrapToggle("enable");}).catch(()=>{electron.ipcRenderer.send("reportError","Unable to enable / disable the heater");});}), this.transformed=!0), this.enableDCDC&&$(this.enableDCDC).data("bs.toggle")[this.state.heater_status?"on":"off"](!0);}render(){let a=20<this.state.heating_voltage/this.state.heating_current;return(1>this.state.heating_voltage||!this.state.heating_voltage)&&(a=!1), React.createElement("div",null,this.props.serverState.heatController?React.createElement("div",null,React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},"Heater"),React.createElement("div",{className:"col-lg-4"},React.createElement("label",null,React.createElement("input",{"data-toggle":"toggle",type:"checkbox",ref:a=>this.enableDCDC=a,checked:this.state.heater_status,"data-width":"100","data-height":"25"})))),this.state.heater_status?React.createElement("div",null,React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},"Heating power: ",this.state.heater_power+" W"),React.createElement("div",{className:"col-lg-4"},React.createElement("div",{className:"btn-group"},React.createElement("button",{type:"button",className:"btn-sm btn btn-default",onClick:this.increaseHeatingPower},"+"),"\xA0",React.createElement("button",{type:"button",className:"btn-sm btn btn-default",onClick:this.decreaseHeatingPower},"-")))),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},"Current: ",this.state.heater_current+" A")),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},"Voltage: ",this.state.heater_voltage+" V")),a?React.createElement("div",{className:"row"},React.createElement("span",{className:"grey"},React.createElement("span",{className:"glyphicon glyphicon-warning"})," The calculated heater resistance is off. Check that the pins are properly contacting the window")):null):null):null)}}

class HeatStatus$3 extends React.Component{constructor(){super(...arguments), this.state={}, this.wsUpdate=this.wsUpdate.bind(this), this.setTargetTemperature=this.setTargetTemperature.bind(this), this.changeTargetTemperature=this.changeTargetTemperature.bind(this), this.setPower=this.setPower.bind(this), this.setPIDParameters=this.setPIDParameters.bind(this), this.handleInputChange=this.handleInputChange.bind(this);}handleInputChange(a){const b=a.target,c='checkbox'===b.type?b.checked:b.value,d=b.name;this.state.heater_cooling?'Ki'==d?this.setState({Ki_cooling:c}):'Kp'==d?this.setState({Kp_cooling:c}):'Kd'==d?this.setState({Kd_cooling:c}):'bias'==d&&this.setState({bias_cooling:c}):'Ki'==d?this.setState({Ki_heating:c}):'Kp'==d?this.setState({Kp_heating:c}):'Kd'==d?this.setState({Kd_heating:c}):'bias'==d&&this.setState({bias_heating:c}), this.setState({[d]:c});}componentDidMount(){electron.ipcRenderer.on('group.update.'+this.props.instrumentId+'.'+this.props.name,this.wsUpdate), fetch(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/heat.getPIDParameters?instrumentId=${this.props.instrumentId}&groupName=${this.props.name}`,{method:'GET'}).then(a=>a.json()).then(a=>{this.setState({Kp_heating:a.heating.Kp,Kp_cooling:a.cooling.Kp,Kd_heating:a.heating.Kd,Kd_cooling:a.cooling.Kd,Ki_heating:a.heating.Ki,Ki_cooling:a.cooling.Ki,bias_heating:a.heating.bias,bias_cooling:a.cooling.bias});});}setPIDParameters(){try{fetch(urllib.formatUrl(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/heat.setPIDParameters`,{instrumentId:this.props.instrumentId,groupName:this.props.name,Kp_h:this.state.Kp_heating,Kp_c:this.state.Kp_cooling,Kd_h:this.state.Kd_heating,Kd_c:this.state.Kd_cooling,Ki_h:this.state.Ki_heating,Ki_c:this.state.Ki_cooling,bias_h:this.state.bias_heating,bias_c:this.state.bias_cooling})).then(a=>{if(200!==a.status)throw'Error'}), this.setState({pid_error:!1,pid_success:!0});}catch(a){console.error(a), this.setState({pid_error:a,pid_success:!1});}}setPower(){try{fetch(urllib.formatUrl(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/heat.setPower`,{instrumentId:this.props.instrumentId,groupName:this.props.name,power:this.state.newpower/100})).then(a=>{if(200!==a.status)throw'Error'}), this.setState({power_error:!1,power_success:!0});}catch(a){console.error(a), this.setState({power_error:a,power_success:!1});}}componentWillUnmount(){electron.ipcRenderer.removeListener('group.update.'+this.props.instrumentId+'.'+this.props.name,this.wsUpdate);}wsUpdate(a,b){this.setState(b.data);}changeTargetTemperature(a){this.setState({input_heater_target_temperature:a.target.value});}setTargetTemperature(){fetch(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/heat.setTarget?instrumentId=${this.props.instrumentId}&groupName=${this.props.name}&target=${this.state.input_heater_target_temperature}`,{method:'GET'}).then(()=>{});}componentDidUpdate(){this.buttonHeatCool&&!this.transformed&&$(this.buttonHeatCool).bootstrapToggle({on:'Cooling',off:'Heating'}).change(()=>{$(this.buttonHeatCool).bootstrapToggle('disable'), fetch(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/heat.${this.buttonHeatCool.checked?'setCooling':'setHeating'}?instrumentId=${this.props.instrumentId}&groupName=${this.props.name}`,{method:'GET'}).then(()=>{$(this.buttonHeatCool).bootstrapToggle('enable');}).catch(()=>{electron.ipcRenderer.send('reportError','Unable to switch the heater polarity');});}), this.buttonMode&&!this.transformed&&$(this.buttonMode).bootstrapToggle({on:'PID',off:'Set power'}).change(()=>{$(this.buttonMode).bootstrapToggle('disable'), fetch(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/heat.setMode?mode=${this.buttonMode.checked?'pid':'fixedPower'}&instrumentId=${this.props.instrumentId}&groupName=${this.props.name}`,{method:'GET'}).then(()=>{$(this.buttonMode).bootstrapToggle('enable');}).catch(()=>{electron.ipcRenderer.send('reportError','Unable to change the heating mode');});}), this.transformed||(this.transformed=!0), this.buttonHeatCool&&$(this.buttonHeatCool).data('bs.toggle')[this.state.heater_cooling?'on':'off'](!0), this.buttonMode&&$(this.buttonMode).data('bs.toggle')['pid'==this.state.heater_mode?'on':'off'](!0);}render(){return console.log(this.state), React.createElement('div',null,this.props.serverState.heatController?React.createElement('div',null,React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},'Temperature (ref.) :'),React.createElement('div',{className:'col-lg-4'},this.state.heater_reference_temperature?this.state.heater_reference_temperature+'\xB0C':'N/A')),React.createElement('h4',null,'Control'),!1!==environment.statuses.heat.switch&&React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},'Polarity'),React.createElement('div',{className:'col-lg-4'},React.createElement('label',null,React.createElement('input',{"data-toggle":'toggle',type:'checkbox',ref:a=>this.buttonHeatCool=a,checked:this.state.heater_cooling,"data-width":'100',"data-height":'25'})))),React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},'Mode'),React.createElement('div',{className:'col-lg-4'},React.createElement('label',null,React.createElement('input',{"data-toggle":'toggle',type:'checkbox',ref:a=>this.buttonMode=a,checked:'pid'==this.state.heater_mode,"data-width":'100',"data-height":'25'})))),'pid'==this.state.heater_mode?React.createElement('div',null,React.createElement('h5',null,'PID control'),this.state.pid_error&&React.createElement('div',{className:'alert alert-danger'},'Error in setting the PID parameters.'),this.state.pid_success&&React.createElement('div',{className:'alert alert-success'},'PID parameters updated !'),React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},'Target temperature:'),React.createElement('div',{className:'col-lg-4'},this.state.heater_target_temperature?this.state.heater_target_temperature+' \xB0C':'N/A')),React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},'New target temperature:'),React.createElement('div',{className:'col-lg-3'},React.createElement('div',{className:'input-group input-group-sm'},React.createElement('input',{type:'number',onChange:this.changeTargetTemperature,className:'form-control',min:'10',max:'85',step:'0.5',value:this.state.input_heater_target_temperature}),React.createElement('span',{className:'input-group-addon'},'\xB0C'),React.createElement('span',{className:'input-group-btn'},React.createElement('button',{className:'btn btn-default',onClick:this.setTargetTemperature,type:'button'},'Set'))))),React.createElement('div',null,React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},React.createElement('small',null,'Output:')),React.createElement('div',{className:'col-lg-4'},React.createElement('small',null,React.createElement('em',null,'Duty cycle (0.0 - 1.0) ')))),React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},React.createElement('small',null,'Input:')),React.createElement('div',{className:'col-lg-4'},React.createElement('small',null,React.createElement('em',null,'Temperature error in \xB0C')))),React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},React.createElement('small',null,'Time unit:')),React.createElement('div',{className:'col-lg-4'},React.createElement('small',null,React.createElement('em',null,'Seconds')))),React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},'Kp (Prop.)'),React.createElement('div',{className:'col-lg-4'},React.createElement('input',{className:'form-control input-sm',name:'Kp',value:this.state.heater_cooling?this.state.Kp_cooling:this.state.Kp_heating,onChange:this.handleInputChange}))),React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},'Kd (Differential)'),React.createElement('div',{className:'col-lg-4'},React.createElement('input',{className:'form-control input-sm',name:'Kd',value:this.state.heater_cooling?this.state.Kd_cooling:this.state.Kd_heating,onChange:this.handleInputChange}))),React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},'Ki (Integral)'),React.createElement('div',{className:'col-lg-4'},React.createElement('input',{className:'form-control input-sm',name:'Ki',value:this.state.heater_cooling?this.state.Ki_cooling:this.state.Ki_heating,onChange:this.handleInputChange}))),React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},'Bias'),React.createElement('div',{className:'col-lg-4'},React.createElement('input',{className:'form-control input-sm',name:'bias',value:this.state.heater_cooling?this.state.bias_cooling:this.state.bias_heating,onChange:this.handleInputChange}))),React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'}),React.createElement('div',{className:'col-lg-4'},React.createElement('button',{className:'btn btn-default btn-sm',onClick:this.setPIDParameters,type:'button'},'Update PID parameters'))))):React.createElement('div',null,React.createElement('h5',null,'Fixed power'),this.state.power_error&&React.createElement('div',{className:'alert alert-danger'},'Error in setting the powers.'),this.state.power_success&&React.createElement('div',{className:'alert alert-success'},'Power updated !'),React.createElement('div',null,React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},'Current power'),React.createElement('div',{className:'col-lg-4'},this.state.heater_power?100*this.state.heater_power+'%':'N/A')),React.createElement('div',{className:'row'},React.createElement('div',{className:'col-lg-5'},'New power'),React.createElement('div',{className:'col-lg-3 input-group input-group-sm'},React.createElement('input',{className:'form-control',type:'number',name:'newpower',value:this.state.newpower,onChange:this.handleInputChange}),React.createElement('span',{className:'input-group-addon'},'%'),React.createElement('span',{className:'input-group-btn'},React.createElement('button',{className:'btn btn-default',onClick:this.setPower,type:'button'},'Set'))))))):null)}}

class HeatStatus$4 extends React.Component{constructor(){super(...arguments), this.state={}, this.wsUpdate=this.wsUpdate.bind(this);}componentDidMount(){electron.ipcRenderer.on("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate);}componentWillUnmount(){electron.ipcRenderer.removeListener("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate);}wsUpdate(a,b){this.setState(b.data);}render(){let a=null;if(!environment.statuses.heat)return null;switch(environment.statuses.heat.version){case"1.0":{a=React.createElement(HeatStatus,this.props);break}case"2.1":{a=React.createElement(HeatStatus$1,this.props);break}case"ssr_1.0":{a=React.createElement(HeatStatus$3,this.props);break}default:case"2.0":a=React.createElement(HeatStatus$2,this.props);}return React.createElement("div",{className:"group-status group-status-temperature col-lg-2"},React.createElement("h4",null,"Temperature & Heating"),React.createElement("div",null,this.state.temperature!==void 0&&!1!==this.state.temperature?React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},"Temperature (env.) :"),React.createElement("div",{className:"col-lg-4"},this.state.temperature," \xB0C")):null),a||null)}}

let speedOptions=[];class InstrumentStatus extends React.Component{constructor(){super(...arguments), this.state={}, this.togglePause=this.togglePause.bind(this), this.restartSoftware=this.restartSoftware.bind(this), this.changeAcquisitionSpeed=this.changeAcquisitionSpeed.bind(this), this.autoZero=this.autoZero.bind(this);}componentDidMount(){switch(environment.instrument[this.props.instrumentId].ADC.model){case"ADS1259":speedOptions=[0,2,4,5,7];break;default:case"ADS1147":speedOptions=[1,3,6,8,9];}}async autoZero(){await autoZero(this.props.config,this.props.instrumentId);}async changeAcquisitionSpeed(a){let b=a.target.value,c=await fetch(urllib.formatUrl(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/instrument.setAcquisitionSpeed`,{instrumentId:this.props.instrumentId,speed:b}));await this.props.update();}togglePause(){let a;return a=this.state.paused?"resumeChannels":"pauseChannels", fetch("http://"+this.props.config.trackerHost+":"+this.props.config.trackerPort+"/"+a+"?instrumentId="+encodeURIComponent(this.props.instrumentId),{method:"GET"})}restartSoftware(){return fetch("http://"+this.props.config.trackerHost+":"+this.props.config.trackerPort+"/restart",{method:"GET"})}render(){return environment.instrument[this.props.instrumentId].groups[this.props.name]?React.createElement("div",{className:"col-lg-2 group-status group-status-instrument"},React.createElement("h4",null,"Instrument status"),React.createElement("div",{className:"row"+(this.props.error_influxdb?" status-error":"")},React.createElement("div",{className:"col-lg-5"},React.createElement("span",{title:this.props.error_influxdb||"",className:"glyphicon glyphicon-"+(this.props.error_influxdb?"warning-sign":"check")})," InfluxDB server"),React.createElement("div",{className:"col-lg-4"},React.createElement("button",{type:"button",className:"btn btn-cl btn-default btn-sm",onClick:()=>{electron.ipcRenderer.send("editInfluxDB");}},React.createElement("span",{className:"glyphicon glyphicon-cog"})," Configure"))),React.createElement("div",{className:"row"+(this.props.error_tracker?" status-error":"")},React.createElement("div",{className:"col-lg-5"},React.createElement("span",{title:this.props.error_tracker||"",className:"glyphicon glyphicon-"+(this.props.error_tracker?"warning-sign":"check")})," MPP Tracker"),React.createElement("div",{className:"col-lg-4"},React.createElement("button",{type:"button",className:"btn btn-cl btn-default btn-sm",onClick:()=>{electron.ipcRenderer.send("editInstrument",this.props.config.trackerHost);}},React.createElement("span",{className:"glyphicon glyphicon-cog"})," Configure"))),React.createElement("div",{className:"row"+(this.state.paused?" status-error":"")},React.createElement("div",{className:"col-lg-5"},React.createElement("span",{className:"glyphicon glyphicon-"+(this.state.paused?"warning-sign":"check")})," ",this.state.paused?"Tracking paused":"Tracking enabled"),React.createElement("div",{className:"col-lg-4"},React.createElement("button",{type:"button",className:"btn btn-cl btn-default btn-sm",onClick:this.togglePause},this.state.paused?React.createElement("span",null,React.createElement("span",{className:"glyphicon glyphicon-start"}),"Resume"):React.createElement("span",null,React.createElement("span",{className:"glyphicon glyphicon-pause"}),"Pause")))),"instrument"===environment.instrument[this.props.instrumentId].autoZero&&React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},React.createElement("button",{type:"button",className:"btn btn-cl btn-default btn-sm",onClick:this.autoZero},React.createElement("span",null,"Auto-zero"))),React.createElement("div",{className:"col-lg-4"})),!1!==environment.instrument[this.props.instrumentId].groups[this.props.name].resettable&&React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},React.createElement("button",{type:"button",className:"btn btn-cl btn-default btn-sm",onClick:this.resetSlave},React.createElement("span",null,"Reset enclosure(s)"))),React.createElement("div",{className:"col-lg-4"})),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-5"},React.createElement("button",{type:"button",className:"btn btn-cl btn-default btn-sm",onClick:this.restartSoftware},React.createElement("span",null,"Restart instrument firmware"))),React.createElement("div",{className:"col-lg-4"})),0<speedOptions.length&&!1!==environment.instrument[this.props.instrumentId].changeSpeed&&React.createElement("div",{className:"form-group"},React.createElement("label",{htmlFor:"tracking_speed",className:"col-sm-9"},"Acquisition speed ",React.createElement("sup",{title:"This option directly affects the acquisition speed of the instrument, and therefore has a significant impact on the tracking efficiency when the light bias is noisy. The slower the better for the convergence, but it will limit the overall tracking speed."},"?")),React.createElement("div",{className:"col-sm-9"},React.createElement("select",{name:"tracking_speed",id:"tracking_speed",className:"form-control",value:this.props.serverState.acquisition_speed,onChange:this.changeAcquisitionSpeed},React.createElement("option",{key:"0",value:speedOptions[4]},"Maximum"),React.createElement("option",{key:"1",value:speedOptions[3]},"Fast"),React.createElement("option",{key:"2",value:speedOptions[2]},"Average"),React.createElement("option",{key:"3",value:speedOptions[1]},"Slow"),React.createElement("option",{key:"4",value:speedOptions[0]},"Very slow"))))):React.createElement("div",{className:"alert alert-danger"},"Instrument could not be found in software config. Expecting \"",this.props.name,"\". Available: ",Object.keys(environment.instrument[this.props.instrumentId].groups).join(", "),".  ")}}

class TrackerGroupDevices extends React.Component{constructor(a){super(a), this.state={channelChecked:{}}, this.toggleChannelCheck=this.toggleChannelCheck.bind(this), this.cfgAll=this.cfgAll.bind(this), this.checkAll=this.checkAll.bind(this), this.resetSlave=this.resetSlave.bind(this), this.wsUpdate=this.wsUpdate.bind(this);}componentDidMount(){this.initCheckChannels(this.props), this.setState({paused:this.props.paused,heatingPower:this.props.serverState?this.props.serverState.heatingPower:"N/A"}), electron.ipcRenderer.on("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate), this.doEnvironmentalSensing();}componentWillUnmount(){electron.ipcRenderer.removeListener("group.update."+this.props.instrumentId+"."+this.props.name,this.wsUpdate);}wsUpdate(a,b){this.setState(b.data);}componentDidUpdate(){}cfgAll(){var a=[];for(var b in this.state.channelChecked)this.state.channelChecked[b]&&a.push(parseInt(b));electron.ipcRenderer.once("channelsConfigured",(b,c)=>{this.setState({updating:!0});var d={instrumentId:this.props.instrumentId,groupName:this.props.name,chanIds:a,chanStatuses:{}};delete c.measurementName, delete c.enable;for(var e=0;e<a.length;e++)d.chanStatuses[a[e]]=Object.assign({},c,{cellName:c["__cellName_"+a[e]]});return saveChannelStatuses(this.props.config,d)}), electron.ipcRenderer.send("configChannels",{instrumentId:this.props.instrumentId,groupName:this.props.name,chanIds:a,trackerHost:this.props.config.trackerHost,trackerPort:this.props.config.trackerPort});}componentWillReceiveProps(a){this.initCheckChannels(a);}initCheckChannels(a){let b={};a.channels.forEach(a=>{b[a.chanId]=this.state.channelChecked[a.chanId]||!1;}), this.setState({channelChecked:b});}toggleChannelCheck(a){this.setState(b=>(b.channelChecked[a]=!b.channelChecked[a], {channelChecked:b.channelChecked}));}checkAll(){for(var a in this.state.channelChecked)this.state.channelChecked[a]=!this.state.checkAll;this.setState(()=>({channelChecked:this.state.channelChecked,checkAll:!this.state.checkAll}));}doEnvironmentalSensing(){}resetSlave(){fetch(`http://${this.props.config.trackerHost}:${this.props.config.trackerPort}/resetSlave?instrumentId=${this.props.instrumentId}`,{method:"GET"}).then(()=>{});}render(){if(this.props.channels)var a=this.props.channels.map(a=>this.props.serverState&&this.props.serverState.channels&&this.props.serverState.channels[a.chanId]?React.createElement(TrackerDevice,{key:this.props.instrumentId+"_"+a.chanId,instrumentId:this.props.instrumentId,groupName:this.props.name,config:this.props.config,configDB:this.props.configDB,chanId:a.chanId,serverState:this.props.serverState.channels[a.chanId],toggleChannelCheck:()=>this.toggleChannelCheck(a.chanId),channelChecked:this.state.channelChecked[a.chanId]}):void 0);switch(this.state.heating_status){case 1:break;case 2:break;case 3:break;default:}return React.createElement("div",{className:"cl-group"},!!this.props.showHeader&&React.createElement("h4",null,"Group: ",this.props.name),React.createElement("div",{className:"row statuses"},React.createElement(InstrumentStatus,this.props),React.createElement(LightStatus$3,this.props),React.createElement(HeatStatus$4,this.props),React.createElement("div",{className:"clearfix"})),React.createElement("div",{className:"row"},React.createElement("div",{className:"cell-configure-all col-lg-9"},React.createElement("button",{className:"btn btn-default btn-cl",onClick:this.checkAll},React.createElement("span",{className:"glyphicon glyphicon-cog"})," ",this.state.checkAll?"Deselect all":"Select all"),"\xA0",React.createElement("button",{className:"btn btn-default btn-cl",onClick:this.cfgAll},React.createElement("span",{className:"glyphicon glyphicon-cog"})," Configure selected"))),React.createElement("div",null,a))}}

const pad=a=>10>a?"0"+a:a;class Message extends React.Component{constructor(){super();}render(){const a=this.props.time,b=new Date(a),c=`${pad(b.getHours())}:${pad(b.getMinutes())}:${pad(b.getSeconds())}`,d=this.props.channel?`(Chan ${this.props.channel})`:``;return React.createElement("div",{className:this.divClass},"[ ",c," ]: ",d," ",this.props.message)}}class MessageError extends Message{constructor(){super(), this.divClass="text-danger";}}class MessageWarning extends Message{constructor(){super(), this.divClass="text-warning";}}class MessageInfo extends Message{constructor(){super(), this.divClass="text-info";}}

class InstrumentStatus$2 extends React.Component{constructor(){super(...arguments), this.state={messages:[]}, this.wsUpdate=this.wsUpdate.bind(this);}componentDidUpdate(){this.atBottom&&(this.logDiv.scrollTop=this.logDiv.scrollHeight);}componentWillUpdate(){this.atBottom=this.logDiv.scrollTop>=this.logDiv.scrollHeight-150;}componentDidMount(){electron.ipcRenderer.on("instrument.log."+this.props.instrumentId,this.wsUpdate);}componentWillUnmount(){electron.ipcRenderer.removeListener("instrument.log."+this.props.instrumentId,this.wsUpdate);}wsUpdate(a,b){this.state.messages.push(b), 100<this.state.messages.length&&this.state.messages.shift(), this.setState({message:this.state.message});}render(){const a=this.state.messages.map(a=>{switch(a.type){case"info":return React.createElement(MessageInfo,a);break;case"warning":return React.createElement(MessageWarning,a);break;case"error":return React.createElement(MessageError,a);}});return React.createElement("div",{className:"col-lg-2 group-status group-status-instrument"},React.createElement("h4",null,"Activity log"),React.createElement("div",{className:"activityLog",ref:a=>this.logDiv=a},0<a.length?a:"No message to display"))}}

class ErrorMessage extends React.Component{constructor(a){super(a);}render(){var a=[];if(this.props.methods&&Array.isArray(this.props.method))for(var b=0;b<this.props.methods.length;b++)a.push(React.createElement("div",{key:this.props.methods[b][0]},React.createElement("a",{href:"#",onClick:this.props.methods[b][1]},this.props.methods[b][0])));return!this.props.method||[React.createElement("br",null)], React.createElement("div",{className:"error"},"The system encountered an unfortunate error: ",React.createElement("br",null)," ",this.props.message," ",a," ")}}

class TrackerInstrument extends React.Component{constructor(a){super(a), _initialiseProps.call(this), this.state={cfg:a.config,paused:!1,serverState:{}}, a.config||(this.state.error='No configuration file was found for this instrument.'), setInterval(()=>{this.updateInstrument(), this.updateStatus();},1e4), this.configure=this.configure.bind(this), this.editInstrument=this.editInstrument.bind(this), this.updateInstrument=this.updateInstrument.bind(this), this.getStatus=this.getStatus.bind(this), this.updateStatus=this.updateStatus.bind(this), window.addEventListener('online',()=>{this.updateStatus(), this.ping();}), window.addEventListener('offline',()=>{this.updateStatus(), this.ping();}), electron.ipcRenderer.on('light.updated',()=>{this.updateInstrument();});}async ping(a=this.props){return ping(this.props.configDB).then(()=>{this.setState({error_influxdb:!1});}).catch(a=>(console.warn('Cannot reach influx DB. Error was: ',a), this.setState({error_influxdb:'Connection to influxDB has failed: "'+a+'"'}), Promise.resolve()))}async updateStatus(){this.getStatus().then(a=>{this.setState({serverState:a,error_tracker:!1});}).catch(a=>{console.warn('Cannot retrieve channel statuses. Error was: ',a), this.setState({error_tracker:a});});}async getStatus(a=this.props){return fetch('http://'+a.config.trackerHost+':'+a.config.trackerPort+'/getStatus?instrumentId='+a.instrumentId,{method:'GET'}).then(a=>{if(200!==a.status)throw'500 Internal server error';else return a}).then(a=>a.json()).then(a=>(a.error&&this.setState({error:`An error has occured: ${error.toString}`}), a)).catch(a=>{this.setState({error:`Error while retrieving the instrument status. The returned error was ${a.toString()}.`,errorMethods:[['Retry',this.updateInstrument]]});})}editInstrument(){electron.ipcRenderer.send('editInstrument',this.props.config.trackerHost);}componentWillReceiveProps(a){this.setState({cfg:a.config}), this.updateInstrument(a);}configure(){$(this.modal).modal('show');}componentDidMount(){this.ipChanged();}ipChanged(){this.updateInstrument();}getConfig(a=this.props){return fetch('http://'+this.state.cfg.trackerHost+':'+this.state.cfg.trackerPort+'/getInstrumentConfig?instrumentId='+a.instrumentId,{method:'GET'}).then(a=>{if(200!==a.status)throw'500 Internal server error';else return a}).then(a=>a.json()).catch(a=>(setTimeout(()=>{this.updateInstrument();},3e3), this.setState({error:a.message||'The connection to the tracker has failed. Check that the ip address ('+this.state.cfg.trackerHost+') is correct and that you have access to the network',errorMethods:[['Edit the instrument config',this.editInstrument],['Retry',this.updateInstrument]]}), Promise.reject()))}refreshrateChanged(a){this.setState({refreshRate:a});}render(){let a;if(this.state.error||!this.state.serverState)a=React.createElement('div',null,React.createElement(ErrorMessage,{message:this.state.error||this.state.error_influxdb||this.state.error_tracker,methods:this.state.errorMethods}));else if(this.state.groups){var b=this.state.groups.map(a=>React.createElement(TrackerGroupDevices,{showHeader:1<this.state.groups.length,key:a.groupID,instrumentId:this.props.instrumentId,id:a.groupID,name:a.groupName,channels:a.channels,groupConfig:a,config:this.props.config,configDB:this.props.configDB,serverState:this.state.serverState[a.groupName],update:this.updateInstrument,getStatus:this.updateStatus,error_influxdb:this.state.error_influxdb,error_tracker:this.state.error_tracker,paused:this.state.paused}));a=React.createElement('div',null,React.createElement('div',{className:'row statuses'},React.createElement(InstrumentStatus$2,this.props),React.createElement('div',{className:'clearfix'})),b);}return React.createElement('div',null,React.createElement('h3',null,'Instrument: ',this.props.instrumentId),a)}}var _initialiseProps=function(){this.updateInstrument=debounce((a=this.props)=>Promise.all([this.getConfig(a),this.getStatus(a),this.ping(a)]).then(a=>{let b=a[0],c=a[1],d=a[2];this.setState({groups:b.groups,serverState:c,paused:c.paused,error:!1});}).catch(()=>{}),100);};

let tracker; let db;electron.ipcRenderer.on('reloadDB',(a,b)=>{db=b.db, render();}), electron.ipcRenderer.on('loadInstrument',(a,b)=>{tracker=b.tracker, db=b.db, render();});function render(){fetch('http://'+tracker.trackerHost+':'+tracker.trackerPort+'/getInstruments',{method:'GET'}).then(a=>a.json()).then(a=>{let b=[];for(var c in a)b.push(React.createElement('div',{key:c,className:'container-fluid'},React.createElement(TrackerInstrument,{instrumentId:c,trackerConfig:a,config:tracker,configDB:db})));ReactDOM.render(React.createElement('div',null,b),document.getElementById('root'));});}

//# sourceMappingURL=instrument.js.map
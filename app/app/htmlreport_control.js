'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));
var ReactDOM = _interopDefault(require('react-dom'));
var $ = _interopDefault(require('jquery'));
var fs = _interopDefault(require('fs'));
var electron = require('electron');

let query=function(a,b,c){return new Promise(d=>{let e={};e.q=a, e.db=b, e.u=c.username, e.p=c.password, $.get('http://'+c.host+':'+c.port+'/query',e,function(a){d(a.results);});})};

const possibleGraphs={pce:{name:"pce",label:"Power conversion efficiency"},power:{name:"power",label:"Power output"},current:{name:"current",label:"Current output"},voltage:{name:"voltage",label:"Voltage output"},jsc:{name:"jsc",label:"Short circuit current"},voc:{name:"voc",label:"Open circuit voltage"},light:{name:"light",label:"Light intensity"},temperature:{name:"temperature",label:"Temperature"},humidity:{name:"humidity",label:"Humidity"}};class HTMLReportControl extends React.Component{constructor(a){super(a), this.state={data:{},comment:""}, this.close=this.close.bind(this), this.handleInputChange=this.handleInputChange.bind(this), this.handleSelectChange=this.handleSelectChange.bind(this), this.savePDF=this.savePDF.bind(this), this.printPDF=this.printPDF.bind(this);}validateConfig(){this.props.onValidate(this.state), this.close();}savePDF(){electron.ipcRenderer.send("htmlReport.savePDF",{cellName:this.props.cellInfo.cellName});}printPDF(){electron.ipcRenderer.send("htmlReport.printPDF",{cellName:this.props.cellInfo.cellName});}close(){this.props.onClose();}handleInputChange(a){const b=a.target,c="checkbox"===b.type?b.checked:b.value,d=b.name;this.setState({[d]:c});}handleSelectChange(a){var b=a.target.options,c=[];const d=a.target.name;for(var e=0,f=b.length;e<f;e++)b[e].selected&&c.push(b[e].value);this.setState({[d]:c});}componentDidUpdate(){electron.ipcRenderer.send("htmlReport.config",this.state);}componentDidMount(){this.getTrackData();}getTrackData(){var a=this.props.db.db;return query("SELECT time,efficiency FROM \""+encodeURIComponent(this.props.measurementName)+"\" ORDER BY time ASC limit 1;SELECT time,efficiency FROM \""+encodeURIComponent(this.props.measurementName)+"\" ORDER BY time DESC limit 1;",a,this.props.db).then(async b=>{var c=Math.round;if(!b[0].series)throw"No measurement with the name "+encodeURIComponent(this.props.measurementName)+" or no associated data";let d=b[0].series[0].values[0][0],e=b[1].series[0].values[0][0];query(`SELECT time,iv from "${encodeURIComponent(this.props.measurementName)}_iv" ORDER BY time ASC;`,a,this.props.db).then(a=>{if(!a[0].series)return console.warn("No IV curves for this serie"), this.state.data.jv_available=[], void this.setState({data:this.state.data});let b=a[0].series[0].values;this.state.data.jv_available=b.map(a=>({ellapsed:c(10*((new Date(a[0])-new Date(d))/3600/1e3))/10,time:a[0]})), this.setState({data:this.state.data});});})}render(){if(!this.state.data.jv_available)return null;const a=[];switch(this.props.cellInfo.trackingMode){case"MPP":this.props.cellInfo.lightMonitoring&&a.push(possibleGraphs.pce);case"CONSTV":a.push(possibleGraphs.power), a.push(possibleGraphs.current), a.push(possibleGraphs.voltage), a.push(possibleGraphs.jsc), a.push(possibleGraphs.voc);break;case"JSC":a.push(possibleGraphs.jsc);break;case"VOC":a.push(possibleGraphs.voc);}return this.props.cellInfo.lightMonitoring&&a.push(possibleGraphs.light), this.props.cellInfo.temperatureMonitoring&&a.push(possibleGraphs.temperature), this.props.cellInfo.humidityMonitoring&&a.push(possibleGraphs.humidity), React.createElement("div",{className:"container-fluid"},React.createElement("form",{className:"form-horizontal"},React.createElement("h3",null,"j-V curves"),React.createElement("div",{className:"form-group"},React.createElement("label",{className:"col-sm-3"},"Select the j-V curves for the report"),React.createElement("div",{className:"col-sm-9"},React.createElement("select",{className:"form-control",multiple:"multiple",name:"jv",value:this.state.jv,onChange:this.handleSelectChange},this.state.data.jv_available.map(a=>React.createElement("option",{key:a.time,value:a.time},a.ellapsed," hours"))))),React.createElement("h3",null,"General"),React.createElement("div",{className:"form-group"},React.createElement("label",{className:"col-sm-3"},"Comment"),React.createElement("div",{className:"col-sm-9"},React.createElement("textarea",{className:"form-control",name:"comment",value:this.state.comment,onChange:this.handleInputChange})))),React.createElement("div",{className:"btn-group pull-right"},React.createElement("button",{type:"button",className:"btn btn-primary",onClick:this.printPDF},"Print PDF"),React.createElement("button",{type:"button",className:"btn btn-primary",onClick:this.savePDF},"Save PDF")))}}

const {ipcRenderer: ipcRenderer$1}=require('electron');ipcRenderer$1.on('loadForm',(a,b)=>{render(b);});function render(a){ReactDOM.render(React.createElement(HTMLReportControl,{db:a.db,measurementName:a.measurementName,cellInfo:a.cellInfo,instrumentId:a.instrumentId,chanId:a.chanId}),document.getElementById('root'));}

//# sourceMappingURL=htmlreport_control.js.map
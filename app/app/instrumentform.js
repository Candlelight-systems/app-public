'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));
var ReactDOM = _interopDefault(require('react-dom'));
var jquery = _interopDefault(require('jquery'));

class InstrumentForm extends React.Component{constructor(a){super(a), this.handleInputChange=this.handleInputChange.bind(this), this.validateConfig=this.validateConfig.bind(this), this.close=this.close.bind(this), this.state={trackerPort:8080,trackerPortWS:8081,buttonValue:"Add",title:"Add a Candlelight instrument"}, this.connectAttempt=this.connectAttempt.bind(this);}connectAttempt(){fetch("http://"+this.state.trackerHost+":"+this.state.trackerPort+"/idn",{method:"GET"}).then(a=>{if(200!==a.status)throw"Error returned by host.";return a.text().then(a=>{this.setState({connect:"Success ! Instrument response: "+a,connectstate:"success"});})}).catch(a=>{this.setState({connect:"Error. Cannot reach the instrument ("+a+")",connectstate:"warning"});}), this.setState({connect:"Connection in progress...",connectstate:"default"});}validateConfig(){this.props.onValidate(this.state), this.props.onClose();}close(){this.props.onClose();}handleInputChange(a){const b=a.target,c="checkbox"===b.type?b.checked:b.value,d=b.name;this.setState({[d]:c});}componentWillReceiveProps(a){this.setState(a.formState), this.edit();}componentDidMount(){this.props.formState.trackerHost&&this.edit(), this.setState(this.props.formState);}edit(){this.setState(()=>({buttonValue:"Update",title:"Edit a Candlelight instrument"}));}render(){return React.createElement("div",{className:"container-fluid"},React.createElement("form",{onSubmit:this.submit,className:"form-horizontal"},React.createElement("h3",null,this.state.title),React.createElement("div",{className:"form-group"},React.createElement("label",{className:"col-sm-3"},"Name"),React.createElement("div",{className:"col-sm-9"},React.createElement("input",{type:"text",name:"trackerName",id:"trackerName",className:"form-control",placeholder:"",value:this.state.trackerName,onChange:this.handleInputChange}),React.createElement("span",{className:"help-block"},"Give your instrument a generic name so that you can recognize it in the future."))),React.createElement("div",{className:"form-group"},React.createElement("label",{className:"col-sm-3"},"IP address"),React.createElement("div",{className:"col-sm-9"},React.createElement("input",{type:"text",name:"trackerHost",id:"trackerHost",className:"form-control",placeholder:"",value:this.state.trackerHost,onChange:this.handleInputChange}),React.createElement("span",{className:"help-block"},"Connect your instrument to the network and enter here its ip address. Refer to the document to determine your instruments IP address."))),React.createElement("div",{className:"form-group"},React.createElement("label",{className:"col-sm-3"},"Port"),React.createElement("div",{className:"col-sm-9"},React.createElement("input",{type:"text",name:"trackerPort",id:"trackerPort",className:"form-control",placeholder:"",value:this.state.trackerPort,onChange:this.handleInputChange}),React.createElement("span",{className:"help-block"},"8080 is the default communication port."))),React.createElement("div",{className:"form-group"},React.createElement("label",{className:"col-sm-3"},"Websocket Port"),React.createElement("div",{className:"col-sm-9"},React.createElement("input",{type:"text",name:"trackerPortWS",id:"trackerPortWS",className:"form-control",placeholder:"",value:this.state.trackerPortWS,onChange:this.handleInputChange}),React.createElement("span",{className:"help-block"},"8081 is the default websocket communication port."))),React.createElement("div",{className:"form-group"},React.createElement("label",{className:"col-sm-3"},"Attempt to connect"),React.createElement("div",{className:"col-sm-9"},React.createElement("p",null,React.createElement("button",{type:"button",className:"btn btn-primary",name:"connect",onClick:this.connectAttempt},"Connect")),React.createElement("p",{className:"state-message bg-"+this.state.connectstate},this.state.connect)))),React.createElement("div",{className:"btn-group pull-right"},React.createElement("button",{type:"button",className:"btn btn-primary",name:"update",onClick:this.validateConfig},this.state.buttonValue),React.createElement("button",{type:"button",className:"btn btn-default",name:"update",onClick:this.close},"Close")))}}

const {ipcRenderer}=require('electron');ipcRenderer.on('loadForm',(a,b)=>{render(b);});function onValidate(a){ipcRenderer.send('validateForm',a);}function onClose(){ipcRenderer.send('closeForm');}function render(a){ReactDOM.render(React.createElement(InstrumentForm,{formState:a,onValidate:onValidate,onClose:onClose}),document.getElementById('root'));}

//# sourceMappingURL=instrumentform.js.map
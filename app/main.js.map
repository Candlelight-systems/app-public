{"version":3,"file":null,"sources":["C:/Users/Candlelight/app-public/source/main.js"],"sourcesContent":["const electron = require('electron');\r\nconst { Menu, ipcMain, dialog } = require('electron');\r\n// Module to control application life.\r\nconst app = electron.app;\r\n// Module to create native browser window.\r\nconst BrowserWindow = electron.BrowserWindow;\r\n\r\nconst path = require('path');\r\nconst url = require('url');\r\nconst fs = require('fs');\r\nconst request = require('request-promise-native');\r\nconst fix = require('fix-path');\r\nconst fetch = require('node-fetch');\r\nconst WebSocket = require('ws');\r\nconst environment = require('./environment.json');\r\nconst diagnostics = require('./app/scripts/diagnostics');\r\nconst { openForm, sendToForm } = require('./app/util/windows.js');\r\nfix();\r\n\r\nlet currentInstrument;\r\nconst { reportError } = require('../app/util/errorhandling');\r\n\r\nconst {\r\n  config,\r\n  saveConfig,\r\n  getPreference,\r\n  setPreference\r\n} = require('../app/util/config');\r\n\r\nlet windows = {};\r\n\r\nipcMain.on('addInstrument', addInstrument);\r\nipcMain.on('editInstrument', editInstrument);\r\nipcMain.on('removeInstrument', removeInstrument);\r\nipcMain.on('loadInstrument', loadInstrument);\r\n\r\nipcMain.on('editInfluxDB', editInfluxDB);\r\nipcMain.on('updateInfluxDB', updateInfluxDB);\r\nipcMain.on('downloadData', downloadData);\r\nipcMain.on('htmlReport', htmlReport);\r\n\r\nipcMain.on('configChannel', configChannel);\r\nipcMain.on('configChannels', configChannels);\r\nipcMain.on('mppt', openMPPT);\r\nipcMain.on('bugReport', openBugReport);\r\nipcMain.on('calibratePD', openCalibratePD);\r\nipcMain.on('calibratePyranometer', openCalibratePyranometer);\r\nipcMain.on('scheduleLight', openScheduleLight);\r\n\r\nipcMain.on('reportError', reportError);\r\n\r\nipcMain.on('get-config', (event, arg) => {\r\n  event.sender.send('get-config', config);\r\n});\r\n\r\nipcMain.on('set-preference', (event, arg) => {\r\n  setPreference(arg.name, arg.value);\r\n});\r\n\r\nipcMain.on('save-config', () => {\r\n  saveConfig();\r\n});\r\n\r\nfunction makeInstrumentMenu() {\r\n  return {\r\n    label: 'Instrument',\r\n    submenu: [\r\n      {\r\n        label: 'Diagnostics',\r\n        click() {\r\n          diagnostics.openDiagnostics(currentInstrument);\r\n        }\r\n      },\r\n      {\r\n        label: 'Add a new instrument',\r\n        click() {\r\n          addInstrument();\r\n        }\r\n      },\r\n      {\r\n        label: 'Edit instrument',\r\n        click() {\r\n          editInstrument(currentInstrument);\r\n        }\r\n      },\r\n      {\r\n        label: 'Edit database config',\r\n        click() {\r\n          editInfluxDB();\r\n        }\r\n      },\r\n      {\r\n        label: 'Show all measurements',\r\n        click() {\r\n          showAllMeasurements(currentInstrument);\r\n        }\r\n      },\r\n      { type: 'separator' },\r\n      { label: 'Cut', accelerator: 'CmdOrCtrl+X', selector: 'cut:' },\r\n      { label: 'Copy', accelerator: 'CmdOrCtrl+C', selector: 'copy:' },\r\n      { label: 'Paste', accelerator: 'CmdOrCtrl+V', selector: 'paste:' },\r\n\r\n      ...config.instruments.map(instrument => {\r\n        return {\r\n          label: instrument.trackerName,\r\n          checked: currentInstrument == instrument.trackerHost,\r\n          click(event) {\r\n            loadInstrument(event, instrument.trackerHost);\r\n          }\r\n        };\r\n      })\r\n    ]\r\n  };\r\n}\r\n\r\nfunction openSocket(instrumentConfig) {\r\n  const ws = new WebSocket(\r\n    'ws://' +\r\n      instrumentConfig.trackerHost +\r\n      ':' +\r\n      instrumentConfig.trackerPortWS\r\n  );\r\n\r\n  ws.on('open', function open() {\r\n    console.log('Socket is open');\r\n  });\r\n\r\n  ws.on('close', function open() {\r\n    console.log('Socket is closed');\r\n    setTimeout(() => openSocket(instrumentConfig), 1000);\r\n  });\r\n\r\n  ws.on('error', function error(err) {\r\n    console.log('Socket is in error state: ' + error.code);\r\n  });\r\n\r\n  ws.removeAllListeners('message');\r\n  ws.on('message', wsIncoming);\r\n\r\n  ws.isAlive = true;\r\n  ws.on('pong', () => (ws.isAlive = true));\r\n\r\n  var socketTimeout = () => {\r\n    let interval = setInterval(() => {\r\n      if (!ws.isAlive) {\r\n        ws.terminate();\r\n      }\r\n\r\n      if (ws.readyState == WebSocket.CLOSED) {\r\n        clearInterval(interval);\r\n      }\r\n\r\n      ws.isAlive = false;\r\n      ws.ping(() => {});\r\n    }, 30000);\r\n  };\r\n\r\n  socketTimeout();\r\n}\r\n\r\nfunction wsIncoming(data) {\r\n  data = JSON.parse(data);\r\n\r\n  if (!data.instrumentId && windows['instrumentMain']) {\r\n    windows['instrumentMain'].webContents.send(`instrument.log`, data.log);\r\n  }\r\n\r\n  if (data.instrumentId && windows['instrumentMain']) {\r\n    if (data.chanId) {\r\n      windows['instrumentMain'].webContents.send(\r\n        `channel.update.${data.instrumentId}.${data.chanId}`,\r\n        data\r\n      );\r\n    }\r\n\r\n    if (data.groupName) {\r\n      windows['instrumentMain'].webContents.send(\r\n        `group.update.${data.instrumentId}.${data.groupName}`,\r\n        data\r\n      );\r\n    }\r\n\r\n    if (data.log) {\r\n      data.log.time = Date.now();\r\n      windows['instrumentMain'].webContents.send(\r\n        `instrument.log.${data.instrumentId}`,\r\n        data.log\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction doMenu() {\r\n  //require(\"./menu\");\r\n  const template = [];\r\n\r\n  if (environment.ageing) {\r\n    template.push(makeInstrumentMenu());\r\n  }\r\n\r\n  //if (process.platform === 'darwin') {\r\n  template.unshift({\r\n    label: app.getName(),\r\n    submenu: [\r\n      { role: 'about' },\r\n      { type: 'separator' },\r\n      { role: 'services', submenu: [] },\r\n      { type: 'separator' },\r\n      { role: 'hide' },\r\n      { role: 'hideothers' },\r\n      { role: 'unhide' },\r\n      { type: 'separator' },\r\n      { role: 'quit' }\r\n    ]\r\n  });\r\n\r\n  if (process.env.NODE_ENV == 'development') {\r\n    template[0].submenu.push({ role: 'toggledevtools' });\r\n  }\r\n  //}\r\n\r\n  const menu = Menu.buildFromTemplate(template);\r\n  Menu.setApplicationMenu(menu);\r\n}\r\n\r\n// Keep a global reference of the window object, if you don't, the window will\r\n// be closed automatically when the JavaScript object is garbage collected.\r\n\r\nfunction createMainWindow() {\r\n  // Create the browser window.\r\n  windows['instrumentList'] = new BrowserWindow({\r\n    width: 800,\r\n    height: 700,\r\n    resizable: false\r\n  });\r\n\r\n  windows['instrumentList'].webContents.once('dom-ready', () => {\r\n    windows['instrumentList'].webContents.send(\r\n      'dbInformation',\r\n      config.database\r\n    );\r\n  });\r\n\r\n  // and load the index.html of the app.\r\n  windows['instrumentList'].loadURL(\r\n    url.format({\r\n      pathname: path.join(__dirname, 'app/instrumentlist.html'),\r\n      protocol: 'file:',\r\n      slashes: true\r\n    })\r\n  );\r\n\r\n  // Open the DevTools.\r\n  // windows[ 'instrumentList' ].webContents.openDevTools()\r\n\r\n  // Emitted when the window is closed.\r\n  windows['instrumentList'].on('closed', function() {\r\n    // Dereference the window object, usually you would store windows\r\n    // in an array if your app supports multi windows, this is the time\r\n    // when you should delete the corresponding element.\r\n    windows['instrumentList'] = null;\r\n  });\r\n\r\n  doMenu();\r\n}\r\n\r\n// This method will be called when Electron has finished\r\n// initialization and is ready to create browser windows.\r\n// Some APIs can only be used after this event occurs.\r\napp.on('ready', createMainWindow);\r\n\r\n// Quit when all windows are closed.\r\napp.on('window-all-closed', function() {\r\n  // On OS X it is common for applications and their menu bar\r\n  // to stay active until the user quits explicitly with Cmd + Q\r\n  if (process.platform !== 'darwin') {\r\n    app.quit();\r\n  }\r\n});\r\n\r\napp.on('activate', function() {\r\n  // On OS X it's common to re-create a window in the app when the\r\n  // dock icon is clicked and there are no other windows open.\r\n  if (windows['instrumentList'] === null) {\r\n    createMainWindow();\r\n  }\r\n});\r\n\r\nasync function downloadData(\r\n  event,\r\n  tracker,\r\n  measurementName,\r\n  chanId,\r\n  instrumentId\r\n) {\r\n  let json = await fetch(\r\n    `http://${tracker.trackerHost}:${\r\n      tracker.trackerPort\r\n    }/getMeasurement?measurementName=${measurementName}`,\r\n    {\r\n      method: 'GET'\r\n    }\r\n  )\r\n    .then(response => response.json())\r\n    .catch(() => {\r\n      throw new Error(\r\n        `Error while connecting to the instrument. Check that you are online and that the instrument is available on your network.`\r\n      );\r\n    });\r\n\r\n  openForm(\r\n    null,\r\n    'downloadform',\r\n    {\r\n      measurementName: measurementName,\r\n      db: config.database,\r\n      cellInfo: json.cellInfo,\r\n      chanId: chanId,\r\n      instrumentId: instrumentId,\r\n      defaultPath: getPreference('defaultSavePath')\r\n    },\r\n    {\r\n      width: 850,\r\n      height: 800,\r\n      resizable: false\r\n    }\r\n  )\r\n    .then(async result => {\r\n      config.instruments.push(result);\r\n      await saveConfig();\r\n      reloadInstruments();\r\n    })\r\n    .catch(() => {});\r\n}\r\n\r\nfunction htmlReport(event, cellInfo, chanId, measurementName, instrumentId) {\r\n  let listenerConfig, listenerSavePDF /*, listenerPrintPDF*/;\r\n\r\n  ipcMain.on(\r\n    'htmlReport.config',\r\n    (listenerConfig = (event, data) => {\r\n      if (!windows['htmlReport']) {\r\n        return;\r\n      }\r\n\r\n      windows['htmlReport'].webContents.send('config', data);\r\n    })\r\n  );\r\n\r\n  ipcMain.on(\r\n    'htmlReport.savePDF',\r\n    (listenerSavePDF = (event, data) => {\r\n      if (!windows['htmlReport']) {\r\n        return;\r\n      }\r\n\r\n      dialog.showSaveDialog(\r\n        {\r\n          message: 'Save the report for device ' + data.cellName,\r\n          defaultPath:\r\n            (getPreference('defaultSavePathPDF') || '.') +\r\n            '/' +\r\n            data.cellName +\r\n            '.pdf'\r\n        },\r\n        fileName => {\r\n          if (!fileName) {\r\n            return;\r\n          }\r\n\r\n          const filePath = path.parse(fileName);\r\n          setPreference('defaultSavePathPDF', filePath.dir);\r\n\r\n          windows['htmlReport'].webContents.printToPDF(\r\n            {\r\n              marginsType: 1,\r\n              pageSize: 'A4',\r\n              landscape: true\r\n            },\r\n            (err, data) => {\r\n              fs.writeFile(fileName, data, error => {\r\n                console.log(err);\r\n              });\r\n            }\r\n          );\r\n        }\r\n      );\r\n\r\n      //windows[ \"htmlReport\"].webContents.send( \"savePDF\", data );\r\n    })\r\n  );\r\n\r\n  /*\r\n\r\n    ipcMain.on(\"htmlReport.printPDF\", ( listenerPrintPDF = ( event, data ) => {\r\n\r\n      if( ! windows[ 'htmlReport' ] ) {\r\n        return;\r\n      }\r\n\r\n        windows[ 'htmlReport' ].webContents.print( {\r\n          marginsType: 1,\r\n          pageSize: 'A4',\r\n          landscape: true\r\n        }, ( err, data ) => {\r\n\r\n          fs.writeFile( fileName, data, ( error ) => {\r\n            console.log( err );\r\n          } );\r\n        } );\r\n\r\n      //windows[ \"htmlReport\"].webContents.send( \"savePDF\", data );\r\n    } ) );\r\n*/\r\n  openForm(\r\n    null,\r\n    'htmlreport_control',\r\n    {\r\n      measurementName: measurementName,\r\n      db: config.database,\r\n      cellInfo: cellInfo,\r\n      chanId: chanId\r\n    },\r\n    {\r\n      width: 400,\r\n      height: 595,\r\n      x: 50,\r\n      y: 100,\r\n      center: false,\r\n      resizable: false\r\n    },\r\n    () => {\r\n      ipcMain.removeListener('htmlReport.config', listenerConfig);\r\n      ipcMain.removeListener('htmlReport.savePDF', listenerSavePDF);\r\n      //     ipcMain.removeListener( \"htmlReport.printPDF\", listenerPrintPDF );\r\n    }\r\n  );\r\n\r\n  windows['htmlReport'] = new BrowserWindow({\r\n    width: 1122,\r\n    height: 795,\r\n    x: 500,\r\n    y: 100,\r\n    center: false,\r\n    resizable: false\r\n  });\r\n\r\n  windows['htmlReport'].webContents.once('dom-ready', () => {\r\n    windows['htmlReport'].webContents.send('loadData', {\r\n      measurementName: measurementName,\r\n      db: config.database,\r\n      cellInfo: cellInfo,\r\n      chanId: chanId,\r\n      instrumentId: instrumentId\r\n    });\r\n  });\r\n  // and load the index.html of the app.\r\n  windows['htmlReport'].loadURL(\r\n    url.format({\r\n      pathname: path.join(__dirname, 'app/htmlreport.html'),\r\n      protocol: 'file:',\r\n      slashes: true\r\n    })\r\n  );\r\n}\r\n\r\nfunction openBugReport(event) {\r\n  openForm(\r\n    null,\r\n    'bugreport',\r\n    {},\r\n    {\r\n      width: 540,\r\n      height: 600,\r\n      resizable: false\r\n    }\r\n  );\r\n}\r\n\r\nfunction openMPPT(keithleyModel) {\r\n  windows['mppt'] = new BrowserWindow({\r\n    width: 1400,\r\n    height: 1024,\r\n    center: true,\r\n    resizable: false\r\n  });\r\n  // and load the index.html of the app.\r\n  windows['mppt'].loadURL(\r\n    url.format({\r\n      pathname: path.join(__dirname, 'app/mppt.html'),\r\n      protocol: 'file:',\r\n      slashes: true\r\n    })\r\n  );\r\n}\r\n\r\nasync function openCalibratePD(event, data) {\r\n  openForm(\r\n    null,\r\n    'calibratepd',\r\n    {\r\n      instrumentId: data.instrumentId,\r\n      groupName: data.groupName,\r\n      config: data.config\r\n    },\r\n    {\r\n      width: 800,\r\n      height: 600,\r\n      resizable: false\r\n    },\r\n    async () => {\r\n      var channelConfig = await fetch(\r\n        'http://' +\r\n          data.config.trackerHost +\r\n          ':' +\r\n          data.config.trackerPort +\r\n          '/resetAllChannels?instrumentId=' +\r\n          data.instrumentId +\r\n          '&groupName=' +\r\n          data.groupName,\r\n        { method: 'GET' }\r\n      ).then(response => response.json());\r\n    }\r\n  );\r\n}\r\n\r\nasync function openCalibratePyranometer(event, data) {\r\n  openForm(\r\n    null,\r\n    'calibratepyranometer',\r\n    {\r\n      instrumentId: data.instrumentId,\r\n      groupName: data.groupName,\r\n      config: data.config\r\n    },\r\n    {\r\n      width: 800,\r\n      height: 600,\r\n      resizable: false\r\n    },\r\n    async () => {\r\n      //var channelConfig = await fetch( \"http://\" + data.config.trackerHost + \":\" + data.config.trackerPort + \"/resetAllChannels?instrumentId=\" + data.instrumentId + \"&groupName=\" + data.groupName, { method: 'GET' } ).then( ( response ) => response.json() );\r\n    }\r\n  );\r\n}\r\n\r\nasync function openScheduleLight(event, data) {\r\n  //await fetch( \"http://\" + data.config.trackerHost + \":\" +   data.config.trackerPort + \"/light.pause?instrumentId=\" + data.instrumentId, { method: 'GET' } );\r\n\r\n  // Once the light has been updated, send the information to the main window for update\r\n  let listener;\r\n  ipcMain.on(\r\n    'light.updated',\r\n    (listener = () => {\r\n      windows['instrumentMain'].webContents.send('light.updated');\r\n    })\r\n  );\r\n\r\n  openForm(\r\n    null,\r\n    'scheduleLight',\r\n    {\r\n      instrumentId: data.instrumentId,\r\n      groupName: data.groupName,\r\n      config: data.config\r\n    },\r\n    {\r\n      width: 800,\r\n      height: 600,\r\n      resizable: false\r\n    },\r\n    function() {\r\n      // After the window is closed, remove the listener\r\n      ipcMain.removeListener('light.updated', listener);\r\n      //  await fetch( \"http://\" + data.config.trackerHost + \":\" + data.config.trackerPort + \"/light.resume?instrumentId=\" + data.instrumentId, { method: 'GET' } );\r\n    }\r\n  );\r\n}\r\n\r\n// In this file you can include the rest of your app's specific main process\r\n// code. You can also put them in separate files and require them here.\r\n\r\nfunction removeInstrument(event, trackerHost) {\r\n  dialog.showMessageBox(\r\n    {\r\n      type: 'question',\r\n      message: 'Are you sure that you want to remove this instrument ?',\r\n      cancelId: 0,\r\n      defaultId: 0,\r\n      title: 'Remove the instrument',\r\n      buttons: ['Cancel', 'Yes']\r\n    },\r\n    async index => {\r\n      if (index == 1) {\r\n        config.instruments.forEach((instrument, index) => {\r\n          if (instrument.trackerHost == trackerHost) {\r\n            config.instruments.splice(index, 1);\r\n          }\r\n        });\r\n\r\n        await saveConfig();\r\n        reloadInstruments();\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nfunction reloadInstruments() {\r\n  windows['instrumentList'].webContents.send('reloadInstruments');\r\n  doMenu();\r\n}\r\n\r\nfunction addInstrument() {\r\n  openForm(\r\n    null,\r\n    'instrumentform',\r\n    {},\r\n    {\r\n      width: 850,\r\n      height: 800,\r\n      resizable: false\r\n    }\r\n  )\r\n    .then(async result => {\r\n      try {\r\n        config.instruments.push(result);\r\n        await saveConfig();\r\n        reloadInstruments();\r\n      } catch (e) {\r\n        reportError(e);\r\n      }\r\n    })\r\n    .catch(() => {});\r\n}\r\n\r\nfunction loadInstrument(event, tracker) {\r\n  const trackerHost = tracker.host;\r\n  const mode = tracker.mode;\r\n\r\n  if (!windows['instrumentMain']) {\r\n    // Create the browser window.\r\n    windows['instrumentMain'] = new BrowserWindow({\r\n      width: 1400,\r\n      height: 1024,\r\n      center: true,\r\n      resizable: true\r\n    });\r\n  }\r\n\r\n  switch (mode) {\r\n    case 'ageing':\r\n      windows['instrumentMain'].loadURL(\r\n        url.format({\r\n          pathname: path.join(__dirname, 'app/instrument.html'),\r\n          protocol: 'file:',\r\n          slashes: true\r\n        })\r\n      );\r\n      break;\r\n\r\n    case 'measurement':\r\n      windows['instrumentMain'].loadURL(\r\n        url.format({\r\n          pathname: path.join(__dirname, 'app/ivmeasurements/index.html'),\r\n          protocol: 'file:',\r\n          slashes: true\r\n        })\r\n      );\r\n\r\n      break;\r\n  }\r\n\r\n  if (windows['instrumentList']) {\r\n    windows['instrumentList'].close();\r\n  }\r\n\r\n  let instrumentConfig;\r\n\r\n  config.instruments.forEach((instrument, index) => {\r\n    if (instrument.trackerHost == trackerHost) {\r\n      instrumentConfig = instrument;\r\n      currentInstrument = instrument;\r\n    }\r\n  });\r\n\r\n  // Global\r\n\r\n  if (windows['instrumentMain'].webContents.isLoading()) {\r\n    windows['instrumentMain'].webContents.once('dom-ready', () => {\r\n      windows['instrumentMain'].webContents.send('loadInstrument', {\r\n        tracker: instrumentConfig,\r\n        db: config.database\r\n      });\r\n    });\r\n  } else {\r\n    windows['instrumentMain'].webContents.send('loadInstrument', {\r\n      tracker: instrumentConfig,\r\n      db: config.database\r\n    });\r\n  }\r\n\r\n  windows['instrumentMain'].once('close', () => {\r\n    windows['instrumentMain'] = null;\r\n  });\r\n\r\n  doMenu();\r\n\r\n  openSocket(instrumentConfig);\r\n}\r\n\r\nfunction editInstrument(event, trackerHost) {\r\n  let data;\r\n\r\n  config.instruments.forEach((instrument, index) => {\r\n    if (instrument.trackerHost == trackerHost) {\r\n      data = instrument;\r\n    }\r\n  });\r\n\r\n  if (!data) {\r\n    throw 'Could not find the data corresponding to this instrument';\r\n  }\r\n\r\n  openForm(null, 'instrumentform', data, {\r\n    width: 600,\r\n    height: 800,\r\n    resizable: false\r\n  })\r\n    .then(async results => {\r\n      Object.assign(data, results);\r\n      await saveConfig();\r\n\r\n      if (windows['instrumentMain']) {\r\n        windows['instrumentMain'].webContents.send('loadInstrument', {\r\n          tracker: data,\r\n          db: config.database\r\n        });\r\n      }\r\n\r\n      if (windows['instrumentList']) {\r\n        windows['instrumentList'].webContents.send('instrumentUpdated');\r\n      }\r\n\r\n      reloadInstruments();\r\n    })\r\n    .catch(() => {});\r\n}\r\n\r\nfunction editInfluxDB(event) {\r\n  let data;\r\n  let influxConfig = config.database;\r\n\r\n  openForm(null, 'influxdbform', influxConfig, {\r\n    width: 600,\r\n    height: 700,\r\n    resizable: false\r\n  })\r\n    .then(async results => {\r\n      config.database = results;\r\n\r\n      await saveConfig();\r\n\r\n      sendToForm('uploading', {\r\n        status: 'progress',\r\n        host: config.instruments.map(i => i.trackerHost).join(', ')\r\n      });\r\n\r\n      updateInfluxDB()\r\n        .then(() => {\r\n          sendToForm('uploading', { status: 'done' });\r\n        })\r\n        .catch(err => {\r\n          sendToForm('uploading', {\r\n            status: 'error',\r\n            error: err,\r\n            host: err.options.host\r\n          });\r\n        });\r\n\r\n      if (windows['instrumentMain']) {\r\n        windows['instrumentMain'].webContents.send('reloadDB', {\r\n          db: config.database\r\n        });\r\n      }\r\n\r\n      if (windows['instrumentList']) {\r\n        windows['instrumentList'].webContents.send(\r\n          'dbInformation',\r\n          config.database\r\n        );\r\n      }\r\n    })\r\n    .catch(() => {});\r\n}\r\n\r\nfunction showAllMeasurements(instrument) {\r\n  console.log(instrument);\r\n  openForm(\r\n    null,\r\n    'showallmeasurements',\r\n    { config: instrument, configDB: config.database },\r\n    { width: 600, height: 700, resizable: false }\r\n  )\r\n    .then(results => {})\r\n    .catch(() => {});\r\n}\r\n\r\nfunction updateInfluxDB() {\r\n  return Promise.all(\r\n    config.instruments.map(instrument => {\r\n      return request.post({\r\n        url:\r\n          'http://' +\r\n          instrument.trackerHost +\r\n          ':' +\r\n          instrument.trackerPort +\r\n          '/setInfluxDB',\r\n        host: instrument.trackerHost,\r\n        form: config.database,\r\n        timeout: 1000\r\n      });\r\n    })\r\n  );\r\n}\r\n\r\nasync function configChannel(event, data) {\r\n  let influxConfig = config.database;\r\n\r\n  var channelConfig = await fetch(\r\n    'http://' +\r\n      data.trackerHost +\r\n      ':' +\r\n      data.trackerPort +\r\n      '/getChannelConfig?instrumentId=' +\r\n      data.instrumentId +\r\n      '&chanId=' +\r\n      data.chanId,\r\n    { method: 'GET' }\r\n  ).then(response => response.json());\r\n\r\n  var instrumentConfig = await fetch(\r\n    'http://' +\r\n      data.trackerHost +\r\n      ':' +\r\n      data.trackerPort +\r\n      '/getInstrumentConfig?instrumentId=' +\r\n      data.instrumentId,\r\n    { method: 'GET' }\r\n  ).then(response => response.json());\r\n\r\n  var channelState = await fetch(\r\n    'http://' +\r\n      data.trackerHost +\r\n      ':' +\r\n      data.trackerPort +\r\n      '/getStatus?instrumentId=' +\r\n      data.instrumentId +\r\n      '&chanId=' +\r\n      data.chanId,\r\n    { method: 'GET' }\r\n  ).then(response => response.json());\r\n\r\n  //var externalConnection = await fetch( \"http://\" + data.trackerHost + \":\" + data.trackerPort + \"/getChannelConfig?instrumentId=\" + data.instrumentId + \"&chanId=\" + data.chanId, { method: 'GET' } ).then( ( response ) => response.json() );\r\n  var externalConnection = false;\r\n\r\n  instrumentConfig.instrumentId = data.instrumentId;\r\n\r\n  return openForm(\r\n    null,\r\n    'cellform',\r\n    {\r\n      tracker: data,\r\n      instrumentConfig: instrumentConfig,\r\n      groupName: data.groupName,\r\n      channelConfig: channelConfig,\r\n      channelState: channelState[data.groupName].channels[data.chanId]\r\n    },\r\n    { width: 600, height: 800 }\r\n  )\r\n    .then(results => {\r\n      event.sender.send('channelConfigured', results);\r\n      return results;\r\n    })\r\n    .catch(() => {});\r\n}\r\n\r\nasync function configChannels(event, data) {\r\n  let influxConfig = config.database;\r\n\r\n  var channelsState = await fetch(\r\n    'http://' +\r\n      data.trackerHost +\r\n      ':' +\r\n      data.trackerPort +\r\n      '/getStatus?instrumentId=' +\r\n      data.instrumentId +\r\n      '&groupName=' +\r\n      data.groupName,\r\n    { method: 'GET' }\r\n  ).then(response => response.json());\r\n  var instrumentConfig = await fetch(\r\n    'http://' +\r\n      data.trackerHost +\r\n      ':' +\r\n      data.trackerPort +\r\n      '/getInstrumentConfig?instrumentId=' +\r\n      data.instrumentId,\r\n    { method: 'GET' }\r\n  ).then(response => response.json());\r\n  var channelState = await fetch(\r\n    'http://' +\r\n      data.trackerHost +\r\n      ':' +\r\n      data.trackerPort +\r\n      '/getStatus?instrumentId=' +\r\n      data.instrumentId +\r\n      '&chanId=' +\r\n      data.chanIds[0],\r\n    { method: 'GET' }\r\n  ).then(response => response.json());\r\n\r\n  instrumentConfig.instrumentId = data.instrumentId;\r\n\r\n  return openForm(\r\n    null,\r\n    'cellformall',\r\n    {\r\n      tracker: data,\r\n      channelState: channelState[data.groupName].channels[data.chanIds[0]],\r\n      channelsState: channelsState[data.groupName].channels,\r\n      groupName: data.groupName,\r\n      instrumentConfig: instrumentConfig,\r\n      channelIds: data.chanIds\r\n    },\r\n    { width: 600, height: 800 }\r\n  )\r\n    .then(results => {\r\n      event.sender.send('channelsConfigured', results);\r\n      return results;\r\n    })\r\n    .catch(() => {});\r\n}\r\n"],"names":["electron","require","Menu","ipcMain","dialog","app","BrowserWindow","path","url","fs","request","fix","fetch","WebSocket","environment","diagnostics","openForm","sendToForm","currentInstrument","reportError","windows","on","addInstrument","editInstrument","removeInstrument","loadInstrument","editInfluxDB","updateInfluxDB","downloadData","htmlReport","configChannel","configChannels","openMPPT","openBugReport","openCalibratePD","openCalibratePyranometer","openScheduleLight","event","arg","sender","send","config","name","value","makeInstrumentMenu","openDiagnostics","type","label","accelerator","selector","instruments","map","instrument","trackerName","trackerHost","openSocket","instrumentConfig","ws","trackerPortWS","open","log","error","err","code","removeAllListeners","wsIncoming","isAlive","socketTimeout","interval","setInterval","terminate","readyState","CLOSED","ping","data","JSON","parse","instrumentId","webContents","chanId","groupName","time","Date","now","doMenu","template","ageing","push","unshift","getName","role","submenu","menu","buildFromTemplate","setApplicationMenu","createMainWindow","once","database","loadURL","format","join","__dirname","process","platform","quit","tracker","measurementName","json","trackerPort","then","response","catch","Error","cellInfo","getPreference","result","saveConfig","listenerConfig","listenerSavePDF","showSaveDialog","cellName","fileName","filePath","dir","printToPDF","writeFile","removeListener","keithleyModel","channelConfig","method","listener","showMessageBox","index","forEach","splice","reloadInstruments","e","host","mode","close","isLoading","results","assign","influxConfig","i","status","options","showAllMeasurements","configDB","width","height","resizable","Promise","all","post","channelState","channels","channelsState","chanIds"],"mappings":"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"}
{"version":3,"sources":["../source/main.js"],"names":["electron","require","Menu","ipcMain","dialog","app","BrowserWindow","path","url","fs","request","fix","fetch","environment","currentInstrument","configPath","join","__dirname","replace","config","JSON","parse","readFileSync","windows","on","addInstrument","editInstrument","removeInstrument","loadInstrument","editInfluxDB","updateInfluxDB","downloadData","htmlReport","configChannel","configChannels","openMPPT","openBugReport","openCalibratePD","openScheduleLight","makeInstrumentMenu","label","submenu","click","showAllMeasurements","type","accelerator","selector","instruments","map","trackerName","checked","trackerHost","doMenu","ageing","push","unshift","getName","role","buildFromTemplate","setApplicationMenu","saveConfig","writeFileSync","stringify","createMainWindow","width","height","resizable","loadURL","format","pathname","protocol","slashes","platform","quit","openForm","measurementName","db","database","cellInfo","chanId","then","reloadInstruments","catch","webContents","send","showSaveDialog","message","cellName","defaultPath","printToPDF","marginsType","pageSize","landscape","writeFile","console","log","x","y","center","removeListener","once","instrumentId","groupName","showMessageBox","cancelId","defaultId","title","buttons","forEach","splice","close","isLoading","tracker","Object","assign","post","trackerPort","form","method","json","instrumentConfig","channelConfig","channelState","channels","sender","chanIds","channelsState","channelIds","windowForm","_rejecter","Promise"],"mappings":"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","file":"main.js","sourcesContent":["const electron = require('electron')\nconst {Menu,ipcMain,dialog} = require('electron')\n// Module to control application life.\nconst app = electron.app\n// Module to create native browser window.\nconst BrowserWindow = electron.BrowserWindow\n\nconst path = require('path')\nconst url = require('url')\nconst fs = require('fs');\nconst request = require('request');\nconst fix = require( 'fix-path' );\nconst fetch = require( 'node-fetch' );\nconst environment = require(\"./environment.json\");\n\nfix();\n\nlet currentInstrument;\n\nconst configPath = path.join( __dirname.replace(\"app.asar\", \"app.asar.unpacked\" ), '/config.json' );\nlet config = JSON.parse( fs.readFileSync( configPath ) );\n\nlet windows = {};\n\nipcMain.on(\"addInstrument\", addInstrument );\nipcMain.on(\"editInstrument\", editInstrument );\nipcMain.on(\"removeInstrument\", removeInstrument );\nipcMain.on(\"loadInstrument\", loadInstrument );\n\nipcMain.on(\"editInfluxDB\", editInfluxDB );\nipcMain.on(\"updateInfluxDB\", updateInfluxDB );\nipcMain.on(\"downloadData\", downloadData );\nipcMain.on(\"htmlReport\", htmlReport );\n\nipcMain.on(\"configChannel\", configChannel );\nipcMain.on(\"configChannels\", configChannels );\nipcMain.on(\"mppt\", openMPPT );\nipcMain.on(\"bugReport\", openBugReport );\nipcMain.on(\"calibratePD\", openCalibratePD );\nipcMain.on(\"scheduleLight\", openScheduleLight );\n\n\n\n\nfunction makeInstrumentMenu() {\n  return {\n    label: 'Instrument',\n    submenu: [\n      { label: 'Add a new instrument', click() { addInstrument(); } },\n      { label: 'Edit instrument', click() { editInstrument( currentInstrument ); } },\n      { label: 'Edit database config', click() { editInfluxDB( ); } },\n      { label: 'Show all measurements', click() { showAllMeasurements( currentInstrument ); } },\n      { type: 'separator' },\n      { label: \"Cut\", accelerator: \"CmdOrCtrl+X\", selector: \"cut:\" },\n      { label: \"Copy\", accelerator: \"CmdOrCtrl+C\", selector: \"copy:\" },\n      { label: \"Paste\", accelerator: \"CmdOrCtrl+V\", selector: \"paste:\" },\n\n      ...config.instruments.map( (instrument) => {\n        return { label: instrument.trackerName, checked: currentInstrument == instrument.trackerHost, click( event ) { loadInstrument( event, instrument.trackerHost ) } }\n      } )\n    ]\n  };\n}\n\n\n\nfunction doMenu() {\n  //require(\"./menu\");\n  const template = [\n  ];\n\n  if( environment.ageing ) {\n    template.push( makeInstrumentMenu() );\n  }\n\n  //if (process.platform === 'darwin') {\n    template.unshift({\n      label: app.getName(),\n      submenu: [\n        {role: 'about'},\n        {type: 'separator'},\n        {role: 'services', submenu: []},\n        {type: 'separator'},\n        {role: 'hide'},\n        {role: 'hideothers'},\n        {role: 'unhide'},\n        {type: 'separator'},\n        {role: 'quit'},\n      ]\n    });\n\n    if( process.env.NODE_ENV == 'development' ) {\n      template[ 0 ].submenu.push( {role: 'toggledevtools'} )\n    }\n  //}\n\n  const menu = Menu.buildFromTemplate(template);\n  Menu.setApplicationMenu(menu);\n}\n\n\n\nfunction saveConfig( ) {\n  fs.writeFileSync( configPath, JSON.stringify( config, undefined, \"\\t\" ) ); \n}\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\n\nfunction createMainWindow() {\n  // Create the browser window.\n  windows[ 'instrumentList' ] = new BrowserWindow({ width: 800, height: 700, resizable: false })\n\n  // and load the index.html of the app.\n  windows[ 'instrumentList' ].loadURL(url.format({\n    pathname: path.join(__dirname, 'app/instrumentlist.html'),\n    protocol: 'file:',\n    slashes: true\n  }))\n\n  // Open the DevTools.\n  // windows[ 'instrumentList' ].webContents.openDevTools()\n\n  // Emitted when the window is closed.\n  windows[ 'instrumentList' ].on('closed', function () {\n    // Dereference the window object, usually you would store windows\n    // in an array if your app supports multi windows, this is the time\n    // when you should delete the corresponding element.\n    windows[ 'instrumentList' ] = null\n  });\n\n  doMenu();\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', createMainWindow )\n\n// Quit when all windows are closed.\napp.on('window-all-closed', function () {\n  // On OS X it is common for applications and their menu bar\n  // to stay active until the user quits explicitly with Cmd + Q\n  if (process.platform !== 'darwin') {\n    app.quit()\n  }\n})\n\napp.on('activate', function () {\n  // On OS X it's common to re-create a window in the app when the\n  // dock icon is clicked and there are no other windows open.\n  if (windows[ 'instrumentList' ] === null) {\n    createMainWindow()\n  }\n})\n\nfunction downloadData( event, cellInfo, chanId, measurementName ) {\n\n    openForm( null, \"downloadform\", { \n      measurementName: measurementName, \n      db: config.database, \n      cellInfo: cellInfo, \n      chanId: chanId \n      }, {\n        width: 850,\n        height: 800,\n        resizable: false\n\n      } ).then( ( result ) => {\n      \n        config.instruments.push( result );\n        saveConfig();\n        reloadInstruments();\n\n      } ).catch( () => {} );\n}\n\n\n\nfunction htmlReport( event, cellInfo, chanId, measurementName ) {\n\n    let listenerConfig, listenerSavePDF/*, listenerPrintPDF*/;\n\n    ipcMain.on(\"htmlReport.config\", ( listenerConfig = ( event, data ) => {\n      \n      if( ! windows[ 'htmlReport' ] ) {\n        return;\n      }\n\n      windows[ \"htmlReport\"].webContents.send( \"config\", data );\n    } ) );\n\n    ipcMain.on(\"htmlReport.savePDF\", ( listenerSavePDF = ( event, data ) => {\n      \n      if( ! windows[ 'htmlReport' ] ) {\n        return;\n      }\n\n\n      dialog.showSaveDialog( {\n\n        message: \"Save the report for device \" + data.cellName,\n        defaultPath: \"~/\" + data.cellName + \".pdf\"\n\n      }, ( fileName ) => {\n\n        windows[ 'htmlReport' ].webContents.printToPDF( {\n          marginsType: 1,\n          pageSize: 'A4',\n          landscape: true\n        }, ( err, data ) => {\n\n          fs.writeFile( fileName, data, ( error ) => {\n            console.log( err );  \n          } );\n        } );\n\n      } );\n        \n      //windows[ \"htmlReport\"].webContents.send( \"savePDF\", data );\n    } ) );\n\n/*\n\n    ipcMain.on(\"htmlReport.printPDF\", ( listenerPrintPDF = ( event, data ) => {\n      \n      if( ! windows[ 'htmlReport' ] ) {\n        return;\n      }\n\n        windows[ 'htmlReport' ].webContents.print( {\n          marginsType: 1,\n          pageSize: 'A4',\n          landscape: true\n        }, ( err, data ) => {\n\n          fs.writeFile( fileName, data, ( error ) => {\n            console.log( err );  \n          } );\n        } );\n        \n      //windows[ \"htmlReport\"].webContents.send( \"savePDF\", data );\n    } ) );\n*/\n    openForm( null, \"htmlreport_control\", { \n      measurementName: measurementName, \n      db: config.database, \n      cellInfo: cellInfo, \n      chanId: chanId \n    },   {\n      \n      width: 400,\n      height: 595,\n      x: 50,\n      y: 100,\n      center: false,\n      resizable: false\n\n    }, () => {\n\n        ipcMain.removeListener( \"htmlReport.config\", listenerConfig );\n        ipcMain.removeListener( \"htmlReport.savePDF\", listenerSavePDF );\n   //     ipcMain.removeListener( \"htmlReport.printPDF\", listenerPrintPDF );\n    } );\n\n    windows[ 'htmlReport' ] = new BrowserWindow( {\n      width: 1122, \n      height: 795, \n      x: 500, \n      y: 100, \n      center: false,\n      resizable: false\n    } )\n  \n\n    windows[ 'htmlReport' ].webContents.once(\"dom-ready\", () => {\n      windows[ 'htmlReport' ].webContents.send(\"loadData\", { measurementName: measurementName, db: config.database, cellInfo: cellInfo, chanId: chanId } );\n    });     \n      // and load the index.html of the app.\n    windows[ 'htmlReport' ].loadURL( url.format({\n      pathname: path.join(__dirname, 'app/htmlreport.html'),\n      protocol: 'file:',\n      slashes: true\n    }) );\n}\n\n\n\n\n\nfunction openBugReport( event ) {\n\n    openForm( null, \"bugreport\", {  },   {\n      width: 540,\n      height: 600,\n      resizable: false\n\n    } );\n}\n\n\nfunction openMPPT( keithleyModel ) {\n\n    windows[ 'mppt' ] = new BrowserWindow({width: 1400, height: 1024, center: true, resizable: false })\n\n      // and load the index.html of the app.\n    windows[ 'mppt' ].loadURL(url.format({\n      pathname: path.join(__dirname, 'app/mppt.html'),\n      protocol: 'file:',\n      slashes: true\n    }));\n}\n\n\nasync function openCalibratePD( event, data ) {\n\n\n  //await fetch( \"http://\" + data.config.trackerHost + \":\" + data.config.trackerPort + \"/light.pause?instrumentId=\" + data.instrumentId, { method: 'GET' } );\n  \n  openForm( null, \"calibratepd\", { instrumentId: data.instrumentId, groupName: data.groupName, config: data.config }, {\n    width: 800,\n    height: 600,\n    resizable: false\n  });\n}\n\n\n\n\nasync function openScheduleLight( event, data ) {\n\n\n  //await fetch( \"http://\" + data.config.trackerHost + \":\" +   data.config.trackerPort + \"/light.pause?instrumentId=\" + data.instrumentId, { method: 'GET' } );\n  \n\n  // Once the light has been updated, send the information to the main window for update\n  let listener;\n  ipcMain.on(\"light.updated\", (  listener = () => {\n    windows[ \"instrumentMain\"].webContents.send( \"light.updated\" );\n  } ) );\n\n  openForm( null, \"scheduleLight\", { instrumentId: data.instrumentId, groupName: data.groupName, config: data.config }, {\n    width: 800,\n    height: 600,\n    resizable: false\n  }, function() {\n\n    // After the window is closed, remove the listener\n    ipcMain.removeListener( \"light.updated\", listener );\n//  await fetch( \"http://\" + data.config.trackerHost + \":\" + data.config.trackerPort + \"/light.resume?instrumentId=\" + data.instrumentId, { method: 'GET' } );\n\n  } );\n}\n\n\n\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here.\n\nfunction removeInstrument( event, trackerHost ) {\n\n  dialog.showMessageBox( {\n    type: 'question',\n    message: 'Are you sure that you want to remove this instrument ?',\n    cancelId: 0,\n    defaultId: 0,\n    title: \"Remove the instrument\",\n    buttons: [ \"Cancel\", \"Yes\" ]    \n  }, ( index ) => {\n\n    if( index == 1 ) {\n\n      config.instruments.forEach( ( instrument, index ) => {\n\n        if( instrument.trackerHost == trackerHost ) {\n          config.instruments.splice( index, 1 );\n        }\n\n      } );\n\n      saveConfig();\n      reloadInstruments();\n    }\n\n  } );\n}\n\nfunction reloadInstruments() {\n  windows[ 'instrumentList' ].webContents.send(\"reloadInstruments\");\n  doMenu();\n}\n\nfunction addInstrument() {\n\n  openForm( null, \"instrumentform\", {},   {\n    width: 850,\n    height: 800,\n    resizable: false\n\n  } ).then( ( result ) => {\n  \n    config.instruments.push( result );\n    saveConfig();\n    reloadInstruments();\n  }).catch( () => {} );\n\n}\n\nfunction loadInstrument( event, trackerHost ) {\n\n  if( ! windows[ 'instrumentMain' ] ) {\n    // Create the browser window.\n    windows[ 'instrumentMain' ] = new BrowserWindow({width: 1400, height: 1024, center: true, resizable: false})\n\n      // and load the index.html of the app.\n    windows[ 'instrumentMain' ].loadURL(url.format({\n      pathname: path.join(__dirname, 'app/instrument.html'),\n      protocol: 'file:',\n      slashes: true\n    }));\n  }\n  \n  if( windows[ 'instrumentList' ] ) {\n    windows[ 'instrumentList' ].close();\n  }\n\n  let instrumentConfig;\n\n  config.instruments.forEach( ( instrument, index ) => {\n\n    if( instrument.trackerHost == trackerHost ) {\n      instrumentConfig = instrument;\n      currentInstrument = instrument;\n    }\n  });\n\n  // Global\n  \n\n\n  if( windows[ 'instrumentMain' ].webContents.isLoading() ) {\n\n    windows[ 'instrumentMain' ].webContents.once(\"dom-ready\", () => {  \n      windows[ 'instrumentMain' ].webContents.send( \"loadInstrument\", { tracker: instrumentConfig, db: config.database } );  \n    });\n    \n  } else {\n\n      windows[ 'instrumentMain' ].webContents.send( \"loadInstrument\", { tracker: instrumentConfig, db: config.database } );  \n  }\n  \n\n  windows[ 'instrumentMain' ].once(\"close\", () => {\n    windows[ 'instrumentMain' ] = null;\n  })\n\n}\n\nfunction editInstrument( event, trackerHost ) {\n\n  let data;\n\n  config.instruments.forEach( ( instrument, index ) => {\n\n    if( instrument.trackerHost == trackerHost ) {\n      data = instrument;\n    }\n\n  } );\n\n  if( ! data ) {\n    throw \"Could not find the data corresponding to this instrument\";\n  }\n\n  openForm( null, \"instrumentform\", data, {\n    width: 850,\n    height: 800,\n    resizable: false\n\n  }  ).then( ( results ) => {\n\n    Object.assign( data, results );\n    saveConfig();\n\n    if( windows[ 'instrumentMain' ] ) {\n      windows[ 'instrumentMain' ].webContents.send( \"loadInstrument\", { tracker: data, db: config.database } ); \n    }\n    \n    reloadInstruments();\n\n  } ).catch( () => {} );\n}\n\n\n\n\nfunction editInfluxDB( event ) {\n\n  let data;\n  let influxConfig = config.database;\n\n  openForm( null, \"influxdbform\", influxConfig, { width: 600, height: 700, resizable: false } ).then( ( results ) => {\n\n    config.database = results;\n    saveConfig();\n\n    updateInfluxDB();\n\n    if( windows[ 'instrumentMain' ] ) {\n      windows[ 'instrumentMain' ].webContents.send( \"reloadDB\", { db: config.database } ); \n    }\n    \n  } ).catch( () => {} );\n}\n\n\n\n\nfunction showAllMeasurements( instrument ) {\n  \n  openForm( null, \"showallmeasurements\", { config: instrument }, { width: 600, height: 700, resizable: false } ).then( ( results ) => {\n\n  } ).catch( () => {} );\n}\n\n\nfunction updateInfluxDB() {\n\n  config.instruments.forEach( ( instrument ) => {\n\n    request.post( {\n       url: \"http://\" + instrument.trackerHost + \":\" + instrument.trackerPort + \"/setInfluxDB\", \n       form: config.database }, function() {\n\n       } );\n  });\n}\n\n\nasync function configChannel( event, data ) {\n\n  let influxConfig = config.database;\n\n  var channelConfig = await fetch( \"http://\" + data.trackerHost + \":\" + data.trackerPort + \"/getChannelConfig?instrumentId=\" + data.instrumentId + \"&chanId=\" + data.chanId, { method: 'GET' } ).then( ( response ) => response.json() );\n  var instrumentConfig = await fetch( \"http://\" + data.trackerHost + \":\" + data.trackerPort + \"/getInstrumentConfig?instrumentId=\" + data.instrumentId, { method: 'GET' } ).then( ( response ) => response.json() );\n  var channelState = await fetch( \"http://\" + data.trackerHost + \":\" + data.trackerPort + \"/getStatus?instrumentId=\" + data.instrumentId + \"&chanId=\" + data.chanId, { method: 'GET' } ).then( ( response ) => response.json() );\n  \n  //var externalConnection = await fetch( \"http://\" + data.trackerHost + \":\" + data.trackerPort + \"/getChannelConfig?instrumentId=\" + data.instrumentId + \"&chanId=\" + data.chanId, { method: 'GET' } ).then( ( response ) => response.json() );\n  var externalConnection = false;\n\n  return openForm( null, \"cellform\", { \n    instrumentConfig: instrumentConfig, \n    channelConfig: channelConfig, \n    channelState: channelState[ data.groupName ].channels[ data.chanId ],\n  }, { width: 600, height: 800 } ).then( ( results ) => {\n    console.log( results );\n    event.sender.send( \"channelConfigured\", results );\n    return results;    \n\n  } ).catch( () => {} );\n}\n\n\n\nasync function configChannels( event, data ) {\n\n  let influxConfig = config.database;\n\n  var channelsState = await fetch( \"http://\" + data.trackerHost + \":\" + data.trackerPort + \"/getStatus?instrumentId=\" + data.instrumentId + \"&groupName=\" + data.groupName, { method: 'GET' } ).then( ( response ) => response.json() );\n  var instrumentConfig = await fetch( \"http://\" + data.trackerHost + \":\" + data.trackerPort + \"/getInstrumentConfig?instrumentId=\" + data.instrumentId, { method: 'GET' } ).then( ( response ) => response.json() );\n  var channelState = await fetch( \"http://\" + data.trackerHost + \":\" + data.trackerPort + \"/getStatus?instrumentId=\" + data.instrumentId + \"&chanId=\" + data.chanIds[ 0 ], { method: 'GET' } ).then( ( response ) => response.json() );\n  \n  return openForm( null, \"cellformall\", { \n\n    channelState: channelState[ data.groupName ].channels[ data.chanId ], \n    channelsState: channelsState[ data.groupName ].channels, \n    instrumentConfig: instrumentConfig,\n    channelIds: data.chanIds\n\n  }, { width: 600, height: 800 } ).then( ( results ) => {\n  \n    event.sender.send( \"channelsConfigured\", results );\n    return results;    \n    \n  } ).catch( () => {} );\n}\n\n\n\n\n\nlet windowForm;\n\nfunction openForm( windowName, pageName, formData, options = { width: 300, height: 420 }, onClose ) {\n\n  if( windowForm ) {\n    ( windowForm._rejecter && windowForm._rejecter() );\n    windowForm.close();\n  }\n  // Create the browser window.\n  windowForm = new BrowserWindow( options );\n\n  // and load the index.html of the app.\n  windowForm.loadURL( url.format({\n    pathname: path.join(__dirname, 'app/' + pageName + '.html'),\n    protocol: 'file:',\n    slashes: true\n  }) );\n\n  windows[ \"form\" ] = windowForm;\n\n  windowForm.once(\"closed\", () => {\n    windows[ \"form\" ] = null;\n    ( windowForm && windowForm._rejecter && windowForm._rejecter() );\n    windowForm = null;\n\n    if( typeof onClose == \"function\" ) {\n      onClose();\n    }\n\n  })\n  return new Promise( ( resolver, rejecter ) => {\n    \n    ipcMain.once(\"validateForm\", ( event, data ) => {\n\n      resolver( data );\n    });\n\n    ipcMain.once(\"closeForm\", ( event, data ) => {\n\n      if( windowForm ) {\n        windowForm.close();\n        windowForm = null;\n      }\n    });\n\n    windowForm.webContents.once(\"dom-ready\", () => {\n      windowForm.webContents.send(\"loadForm\", formData );\n    });\n     \n\n    windowForm._rejecter = rejecter;\n  });\n}\n"]}